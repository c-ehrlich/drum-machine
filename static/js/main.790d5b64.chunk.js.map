{"version":3,"sources":["components/Title.jsx","helpers.js","sequencer.js","store.js","styled.js","components/PadLabel.jsx","tools/playSound.js","components/Pad.jsx","tools/keys.js","components/Pads.jsx","components/Display.jsx","components/Volume.jsx","components/BankSelector.jsx","components/Controls.jsx","components/SettingsRow.jsx","components/InfoModal.jsx","components/InfoModalOpenButton.jsx","components/SequencerButton.jsx","components/SequencerBPM.jsx","components/SequencerIsPlaying.jsx","components/Sequencer.jsx","components/PowerButton.jsx","fonts/D7Mono.woff","fonts/D7Mono.woff2","fonts/fonts.js","App.js","index.js"],"names":["TitleText","styled","h1","ContrastText","span","Title","getSoundBankFromTitle","title","soundBanks","filter","data","url","sequencerInit","Q","W","E","R","A","S","D","F","Z","X","C","V","soundBankInit","useStore","set","bank","setBank","state","currentStep","setCurrentStep","display","setDisplay","showFocus","setShowFocus","power","togglePower","sequencerIsPlaying","sequencer","toggleSequencer","button","step","turnOffSequencer","sequencerBPM","setSequencerBPM","toggleSequencerIsPlaying","volume","setVolume","devtools","create","LabelText","div","StyledPadLabel","PadLabel","labelText","triggerKey","playSound","getState","padAudio","document","querySelector","pause","currentTime","play","padButton","classList","add","setTimeout","remove","err","console","log","PadContainer","PadButton","Pad","useState","fileName","setFileName","padButtonRef","useRef","padAudioRef","useEffect","process","pads","file","ref","className","id","onClick","name","disabled","preload","src","type","keys","PadsGrid","Pads","handleKeyPress","e","key","toUpperCase","includes","addEventListener","removeEventListener","map","index","DisplayBreatheAnimation","keyframes","DisplayContainer","TextFlickerAnimation","StyledDisplay","Display","InfoElement","Volume","handleVolumeChange","useCallback","newVolumeInput","newVolume","volumeErrorCheck","String","padStart","min","max","value","onChange","target","StyledBankSelector","BankSelectorRow","BankSelectorButton","BankSelectorIcon","FontAwesomeIcon","BankSelectorSelect","select","BankSelector","prevBank","currentIndex","findIndex","element","prevIndex","length","nextBank","nextIndex","icon","faChevronLeft","handleChange","Object","values","faChevronRight","ControlsContainer","ControlsRow","Controls","StyledSettingsRow","SettingsRowTitle","h3","SettingsRowDescription","SettingsRowToggleInput","input","SettingsRowToggle","label","SettingsRowToggleSpan","SettingsRow","description","checked","SemiTransparentBackground","StyledInfoModal","ModalContent","CloseModalButton","InfoModal","closeModal","escFunction","event","keyCode","stopPropagation","href","ModalButton","InfoModalOpenButton","openModal","faInfo","StyledSequencerButton","SequencerButton","isOn","toggleOn","StyledSequencerBPM","SequencerBPM","handleBPMChange","bpm","PlayStopButton","PlayStopIcon","SequencerIsPlaying","faPlay","SequencerOuter","SequencerControls","SequencerRowsContainer","SequencerRow","SequencerBlock","SequencerButtonBlock","DeleteRowButton","DeleteRowIcon","Sequencer","interval","setInterval","clearInterval","Array","forEach","clearSequencerRow","faTrash","StyledPowerButton","PowerIcon","PowerButton","toggleOnSound","Audio","toggleOffSound","handleTogglePower","faPowerOff","createGlobalStyle","D7MonoWoff2","D7MonoWoff","AppDiv","DrumMachineBorder","DrumMachineOuterContainer","DrumMachineContainer","DrumMachineBottomContainer","HeaderRow","App","modalOpen","setModalOpen","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.790d5b64.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst TitleText = styled.h1`\n  color: #d1d1d1;\n  margin: 0;\n  font-family: 'Orbitron', sans-serif;\n  font-weight: 700;\n  text-shadow: 0px -2px 0px #000, 0px 1px 1px #666;\n`;\n\nconst ContrastText = styled.span`\n  color: #ff0000;\n`;\n\nconst Title = () => {\n  return (\n    <>\n      <TitleText>\n        <ContrastText>FCC</ContrastText>3000\n      </TitleText>\n    </>\n  );\n};\n\nexport default Title;\n","import soundBanks from \"./sounds.json\";\n\nconst getSoundBankFromTitle = (title) => {\n  return soundBanks.soundBanks.filter(data => {\n    return data.url === title\n  })[0];\n}\n\nexport default getSoundBankFromTitle;\n","// import keys from \"./tools/keys\";\n\nconst sequencerInit = {\n  Q: {\n    1: true,\n    2: false,\n    3: false,\n    4: false,\n    5: false,\n    6: false,\n    7: false,\n    8: false,\n    9: false,\n    10: false,\n    11: true,\n    12: false,\n    13: false,\n    14: false,\n    15: false,\n    16: false,\n  },\n  W: {\n    1: true,\n    2: false,\n    3: false,\n    4: true,\n    5: false,\n    6: true,\n    7: false,\n    8: false,\n    9: false,\n    10: false,\n    11: true,\n    12: false,\n    13: true,\n    14: false,\n    15: false,\n    16: false,\n  },\n  E: {\n    1: false,\n    2: false,\n    3: false,\n    4: false,\n    5: false,\n    6: false,\n    7: false,\n    8: false,\n    9: false,\n    10: false,\n    11: false,\n    12: false,\n    13: false,\n    14: false,\n    15: false,\n    16: false,\n  },\n  R: {\n    1: false,\n    2: false,\n    3: false,\n    4: false,\n    5: false,\n    6: false,\n    7: false,\n    8: false,\n    9: false,\n    10: false,\n    11: false,\n    12: false,\n    13: false,\n    14: false,\n    15: false,\n    16: false,\n  },\n  A: {\n    1: false,\n    2: false,\n    3: false,\n    4: false,\n    5: false,\n    6: false,\n    7: false,\n    8: false,\n    9: false,\n    10: false,\n    11: false,\n    12: false,\n    13: false,\n    14: false,\n    15: false,\n    16: false,\n  },\n  S: {\n    1: false,\n    2: false,\n    3: false,\n    4: false,\n    5: false,\n    6: false,\n    7: true,\n    8: false,\n    9: false,\n    10: false,\n    11: false,\n    12: false,\n    13: false,\n    14: true,\n    15: false,\n    16: false,\n  },\n  D: {\n    1: false,\n    2: true,\n    3: false,\n    4: false,\n    5: false,\n    6: false,\n    7: false,\n    8: true,\n    9: false,\n    10: true,\n    11: false,\n    12: false,\n    13: false,\n    14: false,\n    15: true,\n    16: false,\n  },\n  F: {\n    1: false,\n    2: false,\n    3: false,\n    4: false,\n    5: false,\n    6: false,\n    7: false,\n    8: false,\n    9: false,\n    10: false,\n    11: false,\n    12: false,\n    13: false,\n    14: false,\n    15: false,\n    16: false,\n  },\n  Z: {\n    1: false,\n    2: false,\n    3: false,\n    4: false,\n    5: false,\n    6: false,\n    7: false,\n    8: false,\n    9: false,\n    10: false,\n    11: false,\n    12: false,\n    13: false,\n    14: false,\n    15: false,\n    16: false,\n  },\n  X: {\n    1: false,\n    2: false,\n    3: false,\n    4: false,\n    5: false,\n    6: false,\n    7: false,\n    8: false,\n    9: false,\n    10: false,\n    11: false,\n    12: false,\n    13: false,\n    14: false,\n    15: false,\n    16: false,\n  },\n  C: {\n    1: false,\n    2: false,\n    3: false,\n    4: true,\n    5: false,\n    6: false,\n    7: false,\n    8: false,\n    9: false,\n    10: false,\n    11: false,\n    12: true,\n    13: false,\n    14: false,\n    15: false,\n    16: false,\n  },\n  V: {\n    1: true,\n    2: false,\n    3: false,\n    4: false,\n    5: false,\n    6: false,\n    7: false,\n    8: false,\n    9: false,\n    10: false,\n    11: false,\n    12: false,\n    13: false,\n    14: false,\n    15: false,\n    16: false,\n  },\n};\n\nexport default sequencerInit;\n","import create from \"zustand\";\nimport { devtools } from \"zustand/middleware\";\nimport getSoundBankFromTitle from \"./helpers\";\nimport sequencerInit from \"./sequencer\";\n\n/*\n * get necessary data for initializing the store\n */\nconst soundBankInit = getSoundBankFromTitle(\"nujabes\");\n\nlet useStore = (set) => ({\n  // name and file location of sounds in the sound bank\n  bank: soundBankInit,\n  setBank: (bank) => {\n    set((state) => ({ ...state, bank: getSoundBankFromTitle(bank) }));\n  },\n\n  // TODO having the current step instead of maybe something like an array of steps means that\n  // every sequencer pad gets rerendered everytime the step changes\n  // (confirm this with a console log in useEffect)\n  // so instead it's probably better to have an array or something, and have each pad only\n  // know about the state of its location in the array?\n  currentStep: 0,\n  setCurrentStep: (currentStep) => set((state) => ({ ...state, currentStep })),\n\n  // what the display is currently showing\n  display: \"Drum Machine\",\n  setDisplay: (display) => set((state) => ({ ...state, display })),\n\n  // Hide focus markers\n  // This breaks some accessbility features\n  // but makes the app look nicer\n  showFocus: true,\n  setShowFocus: (showFocus) => set((state) => ({ ...state, showFocus })),\n\n  // drum machine / sequencer power\n  power: true,\n  togglePower: () =>\n    set((state) => ({ power: !state.power, sequencerIsPlaying: false })),\n\n  // on/off status of all sound buttons on the sequencer\n  sequencer: sequencerInit,\n  toggleSequencer: ({ button, step }) => {\n    set((state) => {\n      state.sequencer[button][step] = !state.sequencer[button][step];\n    });\n  },\n  turnOffSequencer: ({ button, step }) => {\n    set((state) => {\n      state.sequencer[button][step] = false;\n    });\n  },\n\n  // BPM of the sequencer\n  sequencerBPM: 92,\n  setSequencerBPM: (sequencerBPM) =>\n    set((state) => ({ ...state, sequencerBPM })),\n\n  // is the sequencer playing or not\n  // toggling the sequencer also resets its current position to 0\n  sequencerIsPlaying: false,\n  toggleSequencerIsPlaying: () => {\n    set((state) => ({\n      sequencerIsPlaying: !state.sequencerIsPlaying,\n      currentStep: 0,\n    }));\n  },\n\n  // volume\n  volume: 50,\n  setVolume: (volume) => set((state) => ({ ...state, volume })),\n});\n\nuseStore = devtools(useStore); // TEMP - remove this in prod\nuseStore = create(useStore);\nexport default useStore;\n","import styled from \"styled-components\";\n\nconst LabelText = styled.div`\n  color: #d1d1d1;\n  margin: 0;\n  font-family: 'Orbitron', sans-serif;\n  font-weight: 400;\n  font-size: 10px;\n`;\n\nexport default LabelText;\n","import LabelText from \"../styled\";\nimport styled from \"styled-components\";\n\nconst StyledPadLabel = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n\nconst PadLabel = ({ labelText, triggerKey }) => {\n  return (\n    <StyledPadLabel>\n      <LabelText>{labelText}</LabelText>\n      <LabelText>{triggerKey}</LabelText>\n    </StyledPadLabel>\n  );\n};\n\nexport default PadLabel;\n","import useStore from \"../store\";\n\nconst playSound = ({ triggerKey, volume }) => {\n  const power = useStore.getState().power;\n  if (power) {\n    try {\n      const padAudio = document.querySelector(`#pad-${triggerKey}`);\n      padAudio.pause();\n      padAudio.currentTime = 0;\n      padAudio.volume = volume / 100;\n      padAudio.play();\n      const padButton = document.querySelector(`#drum-pad-${triggerKey}`);\n      padButton.classList.add(\"hit\");\n      setTimeout(() => {\n        padButton.classList.remove(\"hit\");\n      }, 200);\n\n    } catch (err) {\n      console.log(\"Failed to play...\" + err);\n    }\n  }\n};\n\nexport default playSound;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport useStore from \"../store\";\nimport PadLabel from \"./PadLabel\";\nimport playSound from \"../tools/playSound\";\n\nconst PadContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n\nconst PadButton = styled.button`\n  ${\"\" /* layout */}\n  width: 120px;\n  height: 80px;\n  margin: auto;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: rgb(118, 118, 118);\n  cursor: pointer;\n\n  ${\"\" /* border */}\n  border-radius: 8px;\n  border-style: outset;\n  border-color: rgba(255, 255, 255, 0.125);\n  border-width: 2px;\n\n  ${\"\" /* text */}\n  color: transparent;\n\n  transition: 200ms;\n\n  &:hover {\n    background-color: rgba(215, 215, 215, 0.5);\n    box-shadow: 0px 0px 10px 5px rgba(215, 215, 215, 0.5);\n  }\n\n  &.hit {\n    background-color: salmon;\n    box-shadow: 0px 0px 10px 5px salmon;\n    transition: 0ms;\n  }\n`;\n\nconst Pad = ({ triggerKey }) => {\n  const [fileName, setFileName] = useState(\"\");\n  const power = useStore((state) => state.power);\n  const bank = useStore((state) => state.bank);\n  const setDisplay = useStore((state) => state.setDisplay);\n  const volume = useStore((state) => state.volume);\n  const showFocus = useStore((state) => state.showFocus);\n  const padButtonRef = useRef();\n  const padAudioRef = useRef();\n\n  useEffect(() => {\n    setFileName(\n      process.env.PUBLIC_URL +\n        `/sounds/${bank.url}/${bank.pads[triggerKey].file}`\n    );\n  }, [bank, triggerKey, volume, setDisplay]);\n\n  return (\n    <PadContainer>\n      <PadButton\n        ref={padButtonRef}\n        className={!showFocus && \"no-outline-on-focus\"}\n        id={`drum-pad-${triggerKey}`}\n        onClick={() => {\n          if (fileName) {\n            setDisplay(bank.pads[triggerKey].name);\n            playSound({ triggerKey: triggerKey, volume: volume });\n          } else {\n            console.log(\"file not yet loaded\");\n          }\n        }}\n        disabled={!power}\n      >\n        {fileName ? (\n          <audio\n            preload=\"auto\"\n            ref={padAudioRef}\n            className=\"clip\"\n            id={`pad-${triggerKey}`}\n            src={fileName}\n            type=\"audio/mpeg\"\n          >\n            Your browser does not support HTML5 audio\n          </audio>\n        ) : null}\n      </PadButton>\n      <PadLabel\n        triggerKey={triggerKey}\n        labelText={bank.pads[triggerKey].name}\n      />\n    </PadContainer>\n  );\n};\n\nexport default Pad;\n","const keys = [\n  \"Q\",\n  \"W\",\n  \"E\",\n  \"R\",\n  \"A\",\n  \"S\",\n  \"D\",\n  \"F\",\n  \"Z\",\n  \"X\",\n  \"C\",\n  \"V\",\n];\n\nexport default keys;\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Pad from \"./Pad\";\nimport keys from \"../tools/keys\";\nimport useStore from \"../store\";\nimport playSound from \"../tools/playSound\";\n\n// TODO get this by iterating through the bank instead\n// (after passing the FCC requirements, because those don't allow us to have more pads)\n// also try to get 1, 2, 3, 4 back in the grid\nconst PadsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 120px);\n  gap: 16px;\n`;\n\nconst Pads = () => {\n  const bank = useStore((state) => state.bank);\n  const setDisplay = useStore((state) => state.setDisplay);\n  const volume = useStore((state) => state.volume);\n\n  useEffect(() => {\n    // putting this in here because it needs to be a callback with a huge\n    // dependency array otherwise\n    const handleKeyPress = (e) => {\n      const key = e.key.toUpperCase();\n      if (keys.includes(key)) {\n        setDisplay(bank.pads[key].name);\n        playSound({ triggerKey: key, volume: volume });\n      }\n    };\n    document.addEventListener(\"keypress\", handleKeyPress);\n    return () => {\n      document.removeEventListener(\"keypress\", handleKeyPress);\n    };\n  }, [bank, setDisplay, volume])\n\n  return (\n    <PadsGrid>\n      {keys.map((key, index) => (\n        <Pad\n          triggerKey={key}\n          key={`pad-${key}`}\n        />\n      ))}\n    </PadsGrid>\n  );\n};\n\nexport default Pads;\n","import React from \"react\";\nimport useStore from \"../store\";\nimport styled, { keyframes } from \"styled-components\";\n\nconst DisplayBreatheAnimation = keyframes`\n  0%   { box-shadow: 0px 0px 12px 2px lightsalmon; }\n  50%  { box-shadow: 0px 0px 14px 3px salmon; }\n  100% { box-shadow: 0px 0px 12px 2px lightsalmon; }\n`;\n\nconst DisplayContainer = styled.div`\n  background-color: white;\n  border: 2px inset rgba(0, 0, 0, 0.4);\n  border-radius: 6px;\n  animation: ${DisplayBreatheAnimation} 3s ease-out infinite;\n\n  &.off {\n    box-shadow: none;\n    animation: none;\n  }\n`;\n\nconst TextFlickerAnimation = keyframes`\n  0% { \n    color: #E1F1FF;\n    text-shadow: 2px 0 rgba(255, 0, 0, 0.9), -2px 0 rgba(0, 0, 255, 0.9),\n    1px 1px 2px white, 0 0 1em red, 0 0 0.2em blue;\n    background-color: #8C0000;\n  }\n  50% {\n    color: #FFE9E1;\n    text-shadow: 1px 0 rgba(255, 0, 0, 0.9), -1px 0 rgba(0, 0, 255, 0.9),\n    1px 1px 2px white, 0 0 1em red, 0 0 0.2em blue;\n    background-color: crimson;\n  }\n  100% {\n    color: #E1F1FF;\n    text-shadow: 2px 0 rgba(255, 0, 0, 0.9), -2px 0 rgba(0, 0, 255, 0.9),\n    1px 1px 2px white, 0 0 1em red, 0 0 0.2em blue;\n    background-color: #8C0000;\n  }\n`;\n\nconst StyledDisplay = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-family: \"D7Mono\";\n  font-size: 32px;\n\n  ${\"\" /* text */}\n  animation: ${TextFlickerAnimation} 3s ease-out infinite;\n\n  background-image: linear-gradient(\n      to top,\n      rgba(255, 255, 255, 0.2) 33.33333%,\n      rgba(255, 255, 255, 0.4) 33.33333%,\n      rgba(255, 255, 255, 0.4) 66.66666%,\n      rgba(255, 255, 255, 0.6) 66.66666%\n    ),\n    linear-gradient(\n      to right,\n      rgba(255, 0, 0, 0.7) 33.33333%,\n      rgba(0, 255, 0, 0.7) 33.33333%,\n      rgba(0, 255, 0, 0.7) 66.66666%,\n      rgba(0, 0, 255, 0.7) 66.66666%\n    );\n  background-size: 3px 3px;\n  mix-blend-mode: multiply;\n\n  &.off {\n    background-color: black;\n  }\n`;\n\nconst Display = () => {\n  const display = useStore((state) => state.display);\n  const power = useStore((state) => state.power);\n\n  return (\n    <DisplayContainer className={power ? null : \"off\"}>\n      <StyledDisplay className={power ? null : \"off\"}>\n        <div id=\"display\">{power ? display : null}</div>\n      </StyledDisplay>\n    </DisplayContainer>\n  );\n};\n\nexport default Display;\n","import React, { useEffect, useCallback } from \"react\";\nimport useStore from \"../store\";\nimport styled from \"styled-components\";\nimport LabelText from \"../styled\";\n\nconst MIN_VOLUME = 0;\nconst MAX_VOLUME = 100;\n\nconst InfoElement = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n\nconst Volume = () => {\n  const volume = useStore((state) => state.volume);\n  const setVolume = useStore((state) => state.setVolume);\n  const power = useStore((state) => state.power);\n  const setDisplay = useStore((state) => state.setDisplay);\n  const showFocus = useStore((state) => state.showFocus);\n\n  const handleVolumeChange = useCallback((newVolumeInput) => {\n    const volumeErrorCheck = (newVolumeInput) => {\n      if (newVolumeInput < MIN_VOLUME) {return MIN_VOLUME}\n      else if (newVolumeInput > MAX_VOLUME) {return MAX_VOLUME}\n      else return newVolumeInput;\n    }\n    const newVolume = volumeErrorCheck(newVolumeInput);\n    setDisplay(`Volume ${String(newVolume).padStart(3, '0')}%`);\n    setVolume(newVolume);\n  }, [setVolume, setDisplay]);\n\n  useEffect(() => {\n    const handleKeyPress = (e) => {\n      if (e.key.toUpperCase() === \"Y\") handleVolumeChange(volume - 1);\n      if (e.key.toUpperCase() === \"U\") handleVolumeChange(volume + 1);\n    }\n    document.addEventListener(\"keypress\", handleKeyPress);\n    return () => {\n      document.removeEventListener(\"keypress\", handleKeyPress);\n    }\n  })\n\n  return (\n    <InfoElement>\n      <input\n        type=\"range\"\n        min={MIN_VOLUME}\n        max={MAX_VOLUME}\n        value={volume}\n        onChange={(e) => handleVolumeChange(e.target.value)}\n        className={`slider ${!showFocus && \"no-outline-on-focus\"}`}\n        id=\"myRange\"\n        disabled={!power}\n      />\n      <LabelText>\n        Volume\n      </LabelText>\n    </InfoElement>\n  );\n};\n\nexport default Volume;\n","import React, { useCallback, useEffect } from \"react\";\nimport useStore from \"../store\";\nimport soundBanks from \"../sounds.json\";\nimport LabelText from \"../styled\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChevronLeft,\n  faChevronRight,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst StyledBankSelector = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n\nconst BankSelectorRow = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  gap: 8px;\n`;\n\nconst BankSelectorButton = styled.button`\n  height: 32px;\n  width: 28px;\n  background-color: rgb(118, 118, 118);\n\n  border-radius: 4px;\n  border-style: outset;\n  border-color: rgba(255, 255, 255, 0.125);\n  border-width: 2px;\n\n  cursor: pointer;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    background-color: rgba(215, 215, 215, 0.5);\n    box-shadow: 0px 0px 10px 5px rgba(215, 215, 215, 0.5);\n  }\n`;\n\nconst BankSelectorIcon = styled(FontAwesomeIcon)`\n  font-size: 18px;\n  color: rgb(80, 80, 80);\n  filter: drop-shadow(0px -1px 0px black);\n  ${\"\" /* filter: ; */}\n`;\n\nconst BankSelectorSelect = styled.select`\n  width: 100%;\n  color: rgb(209, 209, 209);\n  background-color: rgb(59, 59, 59);\n  border: 3px inset rgb(118, 118, 118);\n  font-family: \"Orbitron\", sans-serif;\n  border-radius: 4px;\n\n  &.off {\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    color: transparent;\n  }\n`;\n\nconst BankSelector = () => {\n  const bank = useStore((state) => state.bank);\n  const setBank = useStore((state) => state.setBank);\n  const power = useStore((state) => state.power);\n  const setDisplay = useStore((state) => state.setDisplay);\n  const showFocus = useStore((state) => state.showFocus);\n\n  const handleChange = (e) => {\n    setBank(e.target.value);\n  };\n\n  const prevBank = useCallback(() => {\n    // set the current active sound bank to the previous one\n    const currentIndex = soundBanks.soundBanks.findIndex(\n      (element) => element === bank\n    );\n    const prevIndex =\n      currentIndex === 0 ? soundBanks.soundBanks.length - 1 : currentIndex - 1;\n    setBank(\n      soundBanks.soundBanks[prevIndex % soundBanks.soundBanks.length].url\n    );\n  }, [bank, setBank]);\n\n  const nextBank = useCallback(() => {\n    // set the current active sound bank to the next one\n    const nextIndex =\n      soundBanks.soundBanks.findIndex((element) => element === bank) + 1;\n    setBank(\n      soundBanks.soundBanks[nextIndex % soundBanks.soundBanks.length].url\n    );\n  }, [bank, setBank]);\n\n  useEffect(() => {\n    setDisplay(bank.name);\n    const handleKeyPress = (e) => {\n      if (e.key.toUpperCase() === \"H\" && power) prevBank();\n      if (e.key.toUpperCase() === \"J\" && power) nextBank();\n    };\n    document.addEventListener(\"keypress\", handleKeyPress);\n    return () => {\n      document.removeEventListener(\"keypress\", handleKeyPress);\n    };\n  }, [bank, setDisplay, nextBank, prevBank, power]);\n\n  return (\n    <StyledBankSelector>\n      <BankSelectorRow>\n        <BankSelectorButton\n          onClick={prevBank}\n          className={!showFocus && \"no-outline-on-focus\"}\n        >\n          <BankSelectorIcon icon={faChevronLeft} />\n        </BankSelectorButton>\n        <BankSelectorSelect\n          className={`${!showFocus && \"no-outline-on-focus\"} ${\n            !power && \"off\"\n          }`}\n          onChange={(e) => handleChange(e)}\n          value={bank.url}\n          id=\"bank-select\"\n          name=\"bank\"\n          disabled={!power}\n        >\n          {Object.values(soundBanks.soundBanks).map((key) => {\n            return (\n              <option key={key.url} value={key.url}>\n                {key.name}\n              </option>\n            );\n          })}\n        </BankSelectorSelect>\n        <BankSelectorButton\n          onClick={nextBank}\n          className={!showFocus && \"no-outline-on-focus\"}\n        >\n          <BankSelectorIcon icon={faChevronRight} />\n        </BankSelectorButton>\n      </BankSelectorRow>\n      <LabelText>Sample Bank</LabelText>\n    </StyledBankSelector>\n  );\n};\n\nexport default BankSelector;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Display from \"./Display\";\nimport Volume from \"./Volume\";\nimport BankSelector from \"./BankSelector\";\n\nconst ControlsContainer = styled.div`\n  width: 100%;\n  height: 300px;\n  display: grid;\n  gap: 32px;\n  grid-template-rows 1fr 1fr;\n`;\n\nconst ControlsRow = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 32px;\n`;\n\nconst Controls = () => {\n  return (\n    <ControlsContainer>\n      <Display />\n      <ControlsRow>\n        <Volume />\n        <BankSelector />\n      </ControlsRow>\n    </ControlsContainer>\n  );\n};\n\nexport default Controls;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport useStore from \"../store\";\n\nconst StyledSettingsRow = styled.div`\n  display: grid;\n  grid-template-areas:\n    \"settings-row-title settings-row-toggle\"\n    \"settings-row-description settings-row-toggle\";\n  column-gap: 8px;\n`;\n\nconst SettingsRowTitle = styled.h3`\n  margin: 0;\n`;\n\nconst SettingsRowDescription = styled.div`\n  color: grey;\n  grid-area: settings-row-description;\n  margin: 0;\n`;\n\nconst SettingsRowToggleInput = styled.input`\n  opacity: 0;\n  width: 0;\n  height: 0;\n`;\n\nconst SettingsRowToggle = styled.label`\n  position: relative;\n  display: inline-block;\n  width: 60px;\n  height: 34px;\n\n  justify-self: end;\n  align-self: center;\n\n  &:focus-within {\n    outline: 1px dotted #212121;\n    outline: 5px auto -webkit-focus-ring-color;\n  }\n`;\n\nconst SettingsRowToggleSpan = styled.span`\n  position: absolute;\n  cursor: pointer;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: #ccc;\n  -webkit-transition: 0.1s;\n  transition: 0.1s;\n  border-radius: 34px;\n\n  &:before {\n    position: absolute;\n    content: \"\";\n    height: 26px;\n    width: 26px;\n    left: 4px;\n    bottom: 4px;\n    background-color: white;\n    -webkit-transition: 0.1s;\n    transition: 0.1s;\n    border-radius: 50%;\n  }\n\n  ${SettingsRowToggleInput}:checked + & {\n    background-color: #2196f3;\n  }\n\n  ${SettingsRowToggleInput}:focus + & {\n    box-shadow: 0 0 1px #2196f3;\n  }\n\n  ${SettingsRowToggleInput}:checked + &:before {\n    -webkit-transform: translateX(26px);\n    -ms-transform: translateX(26px);\n    transform: translateX(26px);\n  }\n`;\n\nconst SettingsRow = ({ title, description, value, onClick }) => {\n  const showFocus = useStore((state) => state.showFocus);\n\n  return (\n    <StyledSettingsRow>\n      <SettingsRowTitle>{title}</SettingsRowTitle>\n      <SettingsRowDescription>{description}</SettingsRowDescription>\n      <SettingsRowToggle\n        className={`switch settings-row-toggle ${\n          !showFocus && \"no-outline-on-focus-within\"\n        }`}\n      >\n        <SettingsRowToggleInput\n          type=\"checkbox\"\n          checked={value}\n          onChange={onClick}\n        />\n        <SettingsRowToggleSpan className=\"slider round\"></SettingsRowToggleSpan>\n      </SettingsRowToggle>\n    </StyledSettingsRow>\n  );\n};\n\nexport default SettingsRow;\n","import { useEffect } from \"react\";\nimport useStore from \"../store\";\nimport SettingsRow from \"./SettingsRow\";\nimport styled from \"styled-components\";\n\nconst SemiTransparentBackground = styled.div`\n  width: 100vw;\n  height: 100vh;\n  position: absolute;\n  left: 0;\n  top: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: rgba(0, 0, 0, 0.75);\n  z-index: 1;\n`;\n\nconst StyledInfoModal = styled.div`\n  max-width: 480px;\n  background-color: white;\n  padding: 16px;\n  border-radius: 8px;\n  margin: 16px;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nconst ModalContent = styled.div`\n  padding: 0 16px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst CloseModalButton = styled.button`\n  width: 100%;\n  padding: 16px;\n  cursor: pointer;\n  font-size: 16px;\n`;\n\nconst InfoModal = ({ closeModal }) => {\n  const showFocus = useStore((state) => state.showFocus);\n  const setShowFocus = useStore((state) => state.setShowFocus);\n\n  const escFunction = (event) => {\n    if (event.keyCode === 27) {\n      closeModal();\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", escFunction, false);\n\n    return () => {\n      document.removeEventListener(\"keydown\", escFunction, false);\n    };\n  });\n\n  return (\n    <SemiTransparentBackground onClick={() => closeModal()}>\n      <StyledInfoModal onClick={(e) => e.stopPropagation()}>\n        <ModalContent>\n          <h1>FCC3000 Drum Machine</h1>\n          <p>This app does not yet work properly in Safari due to HTML5 audio issues. But I'm working on it!</p>\n          <div>\n            <h3>Shortcuts</h3>\n            <ul>\n              <li>O - Turn power on / off</li>\n              <li>Q-R, A-F, Z-V - play sounds</li>\n              <li>Z, U - decrease / increase volume</li>\n              <li>H, J - change sample bank</li>\n              <li>N, M - decrease / increase BPM</li>\n              <li>I - open / close info menu</li>\n              <li>P - start / stop sequencer</li>\n            </ul>\n          </div>\n          <SettingsRow\n            title=\"Focus Indicator\"\n            description=\"Disabling this setting will disable the visual focus indicator on clickable elements. This improves aesthetics of the app, at the expense of accessibility. Regardless of settings, the button to open this menu and all elements within this menu will always remain accessible.\"\n            value={showFocus}\n            onClick={() => setShowFocus(!showFocus)}\n          />\n          <p>\n            View the code for this project on{\" \"}\n            <a href=\"https://github.com/c-ehrlich/drum-machine\">Github</a>.\n          </p>\n        </ModalContent>\n        <CloseModalButton onClick={() => closeModal()}>Close</CloseModalButton>\n      </StyledInfoModal>\n    </SemiTransparentBackground>\n  );\n};\n\nexport default InfoModal;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faInfo } from \"@fortawesome/free-solid-svg-icons\";\n\nconst ModalButton = styled.button`\n  position: absolute;\n  top: 8px;\n  right: 8px;\n  margin: 8px;\n  width: 32px;\n  height: 32px;\n  font-size: 16px;\n  cursor: pointer;\n  background: none;\n  border-style: outset;\n  border-color: rgba(255, 255, 255, 0.125);\n  border-width: 2px;\n  border-radius: 100%;\n  background-color: white;\n  color: black;\n\n  box-shadow: 0 10px 10px rgba(0, 0, 0, 0.5);\n\n  transition: all 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);\n\n  &:hover {\n    top: 10px;\n    box-shadow: 0 8px 10px rgba(0, 0, 0, 0.5), 0 8px 15px rgba(0, 0, 0, 0.2);\n  }\n\n`;\n\nconst InfoModalOpenButton = ({ openModal }) => {\n  return (\n    <ModalButton onClick={openModal}>\n      <FontAwesomeIcon icon={faInfo} />\n    </ModalButton>\n  );\n};\n\nexport default InfoModalOpenButton;\n","import React, { useEffect } from \"react\";\nimport useStore from \"../store\";\nimport styled from \"styled-components\";\nimport playSound from \"../tools/playSound\";\n\nconst StyledSequencerButton = styled.button`\n  height: 32px;\n  width: 24px;\n  background-color: rgb(118, 118, 118);\n  border-radius: 4px;\n  border-style: outset;\n  border-color: rgba(255, 255, 255, 0.125);\n  border-width: 2px;\n  cursor: pointer;\n\n  transition: 0ms;\n\n  &:hover {\n    background-color: rgba(215, 215, 215, 0.5);\n    box-shadow: 0px 0px 10px 5px rgba(215, 215, 215, 0.5);\n  }\n\n  &.play {\n    background-color: red;\n    box-shadow: 0px 0px 10px 5px red;\n    transition: 200ms;\n  }\n\n  &.hit {\n    background-color: rgb(215, 215, 215);\n    box-shadow: 0px 0px 6px 3px rgb(215, 215, 215);\n    transition: 0ms;\n  }\n\n  &.pass {\n    background-color: salmon;\n    box-shadow: 0px 0px 10px 5px salmon;\n    transition: 500ms;\n  }\n\n  &.pass:hover {\n    transition: 100ms;\n    box-shadow: 0px 0px 12px 6px salmon;\n  }\n`;\n\nconst SequencerButton = ({ button, step }) => {\n  const power = useStore((state) => state.power);\n  const isOn = useStore((state) => state.sequencer[button][step]);\n  const toggleOn = useStore((state) => state.toggleSequencer);\n  const currentStep = useStore((state) => state.currentStep);\n  const volume = useStore((state) => state.volume);\n  const showFocus = useStore((state) => state.showFocus);\n\n  useEffect(() => {\n    if (isOn && currentStep === step) {\n      playSound({triggerKey: button, volume: volume });\n    }\n  }, [isOn, button, step, currentStep, volume]);\n\n  const handleClick = () => {\n    toggleOn({ button: button, step: step });\n  };\n\n  const assignButtonClass = () => {\n    if (!power) return \"power-off\";\n    if (currentStep === step) {\n      if (isOn) {\n        return \"play\";\n      } else {\n        return \"hit\";\n      }\n    } else {\n      if (isOn) {\n        return \"pass\";\n      } else {\n        return null;\n      }\n    }\n  };\n\n  return (\n    <StyledSequencerButton\n      onClick={handleClick}\n      className={`${assignButtonClass()} ${!showFocus && \"no-outline-on-focus\"}`}\n    >\n    </StyledSequencerButton>\n  );\n};\n\nexport default SequencerButton;\n","import React, { useCallback, useEffect } from \"react\";\nimport useStore from \"../store\";\nimport LabelText from \"../styled\";\nimport styled from \"styled-components\";\n\nconst MIN_BPM = 50;\nconst MAX_BPM = 180;\n\nconst StyledSequencerBPM = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n\nconst SequencerBPM = () => {\n  const power = useStore((state) => state.power);\n  const setDisplay = useStore((state) => state.setDisplay);\n  const sequencerBPM = useStore((state) => state.sequencerBPM);\n  const setSequencerBPM = useStore((state) => state.setSequencerBPM);\n  const showFocus = useStore((state) => state.showFocus);\n\n  const handleBPMChange = useCallback((bpm) => {\n    setSequencerBPM(bpm);\n    setDisplay(`${String(bpm).padStart(3, '0')} bpm`);\n  }, [setDisplay, setSequencerBPM]);\n\n  useEffect(() => {\n    const handleKeyPress = (e) => {\n      if (e.key.toUpperCase() === \"N\" && sequencerBPM > MIN_BPM) {\n        handleBPMChange(sequencerBPM - 1);\n      }\n      if (e.key.toUpperCase() === \"M\" && sequencerBPM < MAX_BPM) {\n        handleBPMChange(sequencerBPM + 1);\n      }\n    };\n    document.addEventListener(\"keypress\", handleKeyPress);\n    return () => {\n      document.removeEventListener(\"keypress\", handleKeyPress);\n    };\n  }, [sequencerBPM, handleBPMChange])\n\n  return (\n    <StyledSequencerBPM>\n      <input\n        type=\"range\"\n        min={MIN_BPM}\n        max={MAX_BPM}\n        value={sequencerBPM}\n        onChange={(e) => handleBPMChange(e.target.value)}\n        className={`slider ${!showFocus && \"no-outline-on-focus\"}`}\n        id=\"myRange\"\n        disabled={!power}\n      />\n      <LabelText>Sequencer BPM</LabelText>\n    </StyledSequencerBPM>\n  );\n};\n\nexport default SequencerBPM;\n","import React, { useEffect } from \"react\";\nimport useStore from \"../store\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlay } from \"@fortawesome/free-solid-svg-icons\";\n\nconst PlayStopButton = styled.button`\n  background-color: rgb(118, 118, 118);\n  width: 54px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  border-radius: 8px;\n  border-style: outset;\n  border-color: rgba(255, 255, 255, 0.125);\n\n  cursor: pointer;\n\n  &:hover {\n    background-color: rgba(215, 215, 215, 0.5);\n    box-shadow: 0px 0px 10px 5px rgba(215, 215, 215, 0.5);\n  }\n\n  &.playing {\n    background-color: salmon;\n    box-shadow: 0px 0px 10px 5px salmon;\n  }\n\n  &.playing:hover {\n    box-shadow: 0px 0px 12px 6px salmon;\n  }\n`;\n\nconst PlayStopIcon = styled(FontAwesomeIcon)`\n  color: rgb(80, 80, 80);\n  cursor: pointer;\n  font-size: 24px;\n  filter: drop-shadow(0px -1px 0px black);\n\n  &:hover {\n    color: rgb(80, 80, 80);\n    filter: drop-shadow(0px -1px 0px black);\n  }\n\n  &.playing {\n    color: indianred;\n    filter: drop-shadow(0px -1px 0px firebrick);\n  }\n`;\n\nconst SequencerIsPlaying = () => {\n  const sequencerIsPlaying = useStore((state) => state.sequencerIsPlaying);\n  const showFocus = useStore((state) => state.showFocus);\n  const power = useStore((state) => state.power);\n  const toggleSequencerIsPlaying = useStore(\n    (state) => state.toggleSequencerIsPlaying\n  );\n\n  const handleClick = () => {\n    toggleSequencerIsPlaying();\n  };\n\n  useEffect(() => {\n    const handleKeyPress = (e) => {\n      if (e.key.toUpperCase() === \"P\" && power) {\n        toggleSequencerIsPlaying();\n      }\n    };\n    document.addEventListener(\"keypress\", handleKeyPress);\n    return () => {\n      document.removeEventListener(\"keypress\", handleKeyPress);\n    };\n  }, [toggleSequencerIsPlaying, power]);\n\n  return (\n    <PlayStopButton\n      onClick={handleClick}\n      className={`${sequencerIsPlaying && \"playing\"} ${\n        !showFocus && \"no-outline-on-focus\"\n      }`}\n    >\n      <PlayStopIcon\n        icon={faPlay}\n        className={sequencerIsPlaying ? \"playing\" : null}\n      />\n    </PlayStopButton>\n  );\n};\n\nexport default SequencerIsPlaying;\n","import React, { useEffect } from \"react\";\nimport SequencerButton from \"./SequencerButton\";\nimport keys from \"../tools/keys\";\nimport styled from \"styled-components\";\nimport useStore from \"../store\";\nimport SequencerBPM from \"./SequencerBPM\";\nimport SequencerIsPlaying from \"./SequencerIsPlaying\";\nimport LabelText from \"../styled\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\nconst SequencerOuter = styled.div`\n  width: 520px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  ${\n    \"\" /* TODO this 25px gap is a dumb hack\n  to align things vertically. figure out\n  the correct way of doing it. */\n  }\n  gap: 25px;\n`;\n\nconst SequencerControls = styled.div`\n  width: 100%;\n  display: flex;\n  gap: 32px;\n`;\n\nconst SequencerRowsContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  gap: 8px;\n`;\n\nconst SequencerRow = styled.div`\n  width: 100%;\n  display: flex;\n  gap: 16px;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst SequencerBlock = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n\nconst SequencerButtonBlock = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst DeleteRowButton = styled.button`\n  background-color: transparent;\n  margin: 0;\n  padding: 0;\n  border: 0;\n`;\n\nconst DeleteRowIcon = styled(FontAwesomeIcon)`\n  color: rgb(118, 118, 118);\n  font-size: 24px;\n  cursor: pointer;\n  ${\n    \"\" /* TODO figure out a good way to offset the icons\n  probably don't want to put them on a background/button\n  so maybe a good drop-shadow? */\n  }\n  ${\"\" /* filter: drop-shadow(0px 2px 0px rgba(255, 255, 255, 0.125)); */}\n\n  &:hover {\n    color: rgb(215, 215, 215);\n  }\n`;\n\nconst Sequencer = () => {\n  const bank = useStore((state) => state.bank);\n  const currentStep = useStore((state) => state.currentStep);\n  const setCurrentStep = useStore((state) => state.setCurrentStep);\n  const sequencer = useStore((state) => state.sequencer);\n  const sequencerBPM = useStore((state) => state.sequencerBPM);\n  const sequencerIsPlaying = useStore((state) => state.sequencerIsPlaying);\n  const turnOffSequencer = useStore((state) => state.turnOffSequencer);\n  const power = useStore((state) => state.power);\n  const showFocus = useStore((state) => state.showFocus);\n\n  // TODO extract this logic into its own component? and just unmount that component when\n  // the sequences isn't playing?\n  // also then have currentStep reset to 0?\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (power && sequencerIsPlaying) {\n        currentStep <= 0 || currentStep >= 16\n          ? setCurrentStep(1)\n          : setCurrentStep(currentStep + 1);\n      }\n    }, (1000 / sequencerBPM) * 15);\n    return () => clearInterval(interval);\n  }, [currentStep, setCurrentStep, sequencerBPM, sequencerIsPlaying, power]);\n\n  const clearSequencerRow = (button) => {\n    Object.keys(sequencer[button]).forEach((step) => {\n      turnOffSequencer({ button: button, step: step });\n    });\n  };\n\n  return (\n    <SequencerOuter>\n      <SequencerControls>\n        <SequencerBPM />\n        <SequencerIsPlaying />\n      </SequencerControls>\n      <SequencerRowsContainer>\n        {keys.map((button) => {\n          return (\n            <SequencerBlock key={`sequencer-block-${button}`}>\n              <SequencerRow>\n                <SequencerButtonBlock>\n                  {[...Array(16).keys()].map((step) => {\n                    return (\n                      <SequencerButton\n                        key={`sequencer-${button}-${step + 1}`}\n                        button={button}\n                        // maybe find a function that can create a range between\n                        // two arbitrary numbers instead of doing this awful hack?\n                        step={step + 1}\n                      />\n                    );\n                  })}\n                </SequencerButtonBlock>\n                <DeleteRowButton\n                  onClick={() => clearSequencerRow(button)}\n                  className={`slider ${!showFocus && \"no-outline-on-focus\"}`}\n                >\n                  <DeleteRowIcon icon={faTrash} />\n                </DeleteRowButton>\n              </SequencerRow>\n              <LabelText key={`sequencer-${button}`}>\n                {bank.pads[button].name}\n              </LabelText>\n            </SequencerBlock>\n          );\n        })}\n      </SequencerRowsContainer>\n    </SequencerOuter>\n  );\n};\n\nexport default Sequencer;\n","import React, { useEffect } from \"react\";\nimport useStore from \"../store\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPowerOff } from \"@fortawesome/free-solid-svg-icons\";\n\nconst StyledPowerButton = styled.button`\n  height: 48px;\n  width: 48px;\n  background: conic-gradient(\n    #d7d7d7,\n    #c3c3c3,\n    #cccccc,\n    #c6c6c6,\n    #d7d7d7,\n    #c3c3c3,\n    #cccccc,\n    #c6c6c6,\n    #d7d7d7,\n    #c3c3c3,\n    #cccccc,\n    #c6c6c6,\n    #d7d7d7,\n    #c3c3c3,\n    #cccccc,\n    #c6c6c6,\n    #d7d7d7\n  );\n  border-radius: 100%;\n  border: 3px solid;\n  border-color: #888888;\n  color: black;\n  cursor: pointer;\n\n  &.on {\n    border-color: red;\n    color: red;\n\n    box-shadow: 0px 0px 5px 1px #ffa98f;\n  }\n`;\n\nconst PowerIcon = styled(FontAwesomeIcon)`\n  font-size: 24px;\n`;\n\nconst PowerButton = () => {\n  const power = useStore((state) => state.power);\n  const togglePower = useStore((state) => state.togglePower);\n  const setCurrentStep = useStore((state) => state.setCurrentStep);\n  const showFocus = useStore((state) => state.showFocus);\n\n  const toggleOnSound = new Audio(\n    process.env.PUBLIC_URL + \"/sounds/buttons/switch-on.mp3\"\n  );\n  const toggleOffSound = new Audio(\n    process.env.PUBLIC_URL + \"/sounds/buttons/switch-off.mp3\"\n  );\n\n  const handleTogglePower = () => {\n    if (power) {\n      setCurrentStep(0);\n      toggleOffSound.play();\n    } else {\n      toggleOnSound.play();\n    }\n    togglePower();\n  };\n\n  useEffect(() => {\n    const handleKeyPress = (e) => {\n      if (e.key.toUpperCase() === \"O\") {\n        handleTogglePower();\n      }\n    }\n    document.addEventListener(\"keydown\", handleKeyPress);\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyPress);\n    }\n  })\n\n  return (\n    <StyledPowerButton onClick={handleTogglePower} className={`${power && \"on\"} ${!showFocus && \"no-outline-on-focus\"}`}>\n      <PowerIcon icon={faPowerOff} />\n    </StyledPowerButton>\n  );\n};\n\nexport default PowerButton;\n","export default __webpack_public_path__ + \"static/media/D7Mono.cea5d881.woff\";","export default __webpack_public_path__ + \"static/media/D7Mono.aaf571fa.woff2\";","import { createGlobalStyle } from \"styled-components\";\n\nimport D7MonoWoff from \"./D7Mono.woff\";\nimport D7MonoWoff2 from \"./D7Mono.woff2\";\n\nexport default createGlobalStyle`\n  @font-face {\n    font-family: 'D7Mono';\n    src: local('D7 Mono '), local('D7 Mono '),\n    url(${D7MonoWoff2}) format('woff2'),\n    url(${D7MonoWoff}) format('woff');\n    font-weight: 300;\n    font-style: normal;\n  }\n`\n","import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Title from \"./components/Title\";\nimport Pads from \"./components/Pads\";\nimport Controls from \"./components/Controls\";\nimport InfoModal from \"./components/InfoModal\";\nimport InfoModalOpenButton from \"./components/InfoModalOpenButton\";\nimport Sequencer from \"./components/Sequencer\";\nimport PowerButton from \"./components/PowerButton\";\nimport GlobalFonts from \"./fonts/fonts\";\n\nconst AppDiv = styled.div`\n  min-height: 100vh;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: grey;\n  background-image: url(${process.env.PUBLIC_URL + `/images/wood1.jpg`});\n  background-size: cover;\n  gap: 0px;\n`;\n\nconst DrumMachineBorder = styled.div`\n  margin: 16px;\n  background-image: url(${process.env.PUBLIC_URL + `/images/wood2.jpg`});\n  background-size: cover;\n  margin: 16px;\n  box-shadow: 0px 0px 15px 3px black;\n`;\n\nconst DrumMachineOuterContainer = styled.div`\n  background-color: #333333;\n  background-image: linear-gradient(\n    to right bottom,\n    rgb(17, 17, 17) 12.5%,\n    rgb(67, 67, 67) 25%,\n    rgb(17, 17, 17) 50%,\n    rgb(67, 67, 67) 75%,\n    rgb(17, 17, 17) 100%\n  );\n  padding: 32px;\n  margin: 0 32px; /* what does this do? */\n\n  display: flex;\n  flex-direction: row;\n  gap: 64px;\n\n  @media (max-width: 1280px) {\n    flex-direction: column;\n  }\n`;\n\nconst DrumMachineContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 32px;\n`;\n\nconst DrumMachineBottomContainer = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 32px;\n  justify-content: space-between;\n`;\n\nconst HeaderRow = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nfunction App() {\n  const [modalOpen, setModalOpen] = useState(false);\n\n  useEffect(() => {\n    const handleKeyPress = (e) => {\n      if (e.key.toUpperCase() === \"I\") {\n        setModalOpen(!modalOpen);\n      }\n    };\n    document.addEventListener(\"keypress\", handleKeyPress);\n    return () => {\n      document.removeEventListener(\"keypress\", handleKeyPress);\n    };\n  });\n\n  return (\n    <AppDiv className=\"App\">\n      <GlobalFonts />\n      <InfoModalOpenButton openModal={() => setModalOpen(true)} />\n\n      {modalOpen && <InfoModal closeModal={() => setModalOpen(false)} />}\n      <DrumMachineBorder>\n        <DrumMachineOuterContainer>\n          <DrumMachineContainer>\n            <HeaderRow>\n              <PowerButton />\n              <Title />\n            </HeaderRow>\n            <DrumMachineBottomContainer>\n              <Controls />\n              <Pads />\n            </DrumMachineBottomContainer>\n          </DrumMachineContainer>\n          <Sequencer />\n        </DrumMachineOuterContainer>\n      </DrumMachineBorder>\n    </AppDiv>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}