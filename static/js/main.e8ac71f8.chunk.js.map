{"version":3,"sources":["components/Title.jsx","helpers.js","sequencer.js","store.js","styled.js","components/PadLabel.jsx","tools/playSound.js","components/Pad.jsx","tools/keys.js","components/Pads.jsx","components/Display.jsx","components/Volume.jsx","components/BankSelector.jsx","components/Controls.jsx","components/SequencerButton.jsx","components/SequencerBPM.jsx","components/SequencerIsPlaying.jsx","components/Sequencer.jsx","components/PowerButton.jsx","fonts/D7Mono.woff","fonts/D7Mono.woff2","fonts/fonts.js","hooks/useWindowSize.js","App.js","index.js"],"names":["TitleText","styled","h1","ContrastText","span","Title","getSoundBankFromTitle","title","soundBanks","filter","data","url","sequencerInit","Q","W","E","R","A","S","D","F","Z","X","C","V","soundBankInit","useStore","set","bank","setBank","state","currentStep","setCurrentStep","display","setDisplay","power","togglePower","sequencerIsPlaying","sequencer","toggleSequencer","button","step","turnOffSequencer","sequencerBPM","setSequencerBPM","toggleSequencerIsPlaying","volume","setVolume","devtools","create","LabelText","div","StyledPadLabel","PadLabel","labelText","triggerKey","playSound","getState","padAudio","document","querySelector","pause","currentTime","play","padButton","classList","add","setTimeout","remove","PadContainer","PadButton","Pad","useState","fileName","setFileName","padButtonRef","useRef","padAudioRef","useEffect","process","pads","file","ref","className","id","onClick","name","disabled","src","type","keys","PadsGrid","Pads","handleKeyPress","e","key","toUpperCase","includes","addEventListener","removeEventListener","map","index","DisplayBreatheAnimation","keyframes","DisplayContainer","TextFlickerAnimation","StyledDisplay","Display","InfoElement","Volume","min","max","value","onChange","target","String","padStart","StyledBankSelector","BankSelectorRow","BankSelectorButton","BankSelectorIcon","FontAwesomeIcon","BankSelectorSelect","select","BankSelector","currentIndex","findIndex","element","prevIndex","length","icon","faChevronLeft","handleChange","Object","values","nextIndex","faChevronRight","ControlsContainer","ControlsRow","Controls","StyledSequencerButton","SequencerButton","isOn","toggleOn","StyledSequencerBPM","SequencerBPM","bpm","PlayStopButton","PlayStopIcon","SequencerIsPlaying","faPlay","SequencerOuter","SequencerControls","SequencerRowsContainer","SequencerRow","SequencerBlock","SequencerButtonBlock","DeleteRowIcon","Sequencer","interval","setInterval","clearInterval","Array","faTrash","forEach","clearSequencerRow","StyledPowerButton","PowerIcon","PowerButton","toggleOnSound","Audio","toggleOffSound","faPowerOff","createGlobalStyle","D7MonoWoff2","D7MonoWoff","useWindowSize","width","undefined","height","windowSize","setWindowSize","handleResize","window","innerWidth","innerHeight","AppDiv","DrumMachineBorder","DrumMachineOuterContainer","DrumMachineContainer","DrumMachineBottomContainer","HeaderRow","ScreenSizeReminder","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"wPAGMA,EAAYC,IAAOC,GAAV,+KAQTC,EAAeF,IAAOG,KAAV,+CAcHC,EAVD,WACZ,OACE,mCACE,eAACL,EAAD,WACE,cAACG,EAAD,kBADF,a,+CCVSG,EANe,SAACC,GAC7B,OAAOC,EAAWA,WAAWC,QAAO,SAAAC,GAClC,OAAOA,EAAKC,MAAQJ,KACnB,IC6OUK,EAhPO,CACpBC,EAAG,CACD,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,GAENC,EAAG,CACD,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,GAENC,EAAG,CACD,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,GAENC,EAAG,CACD,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,GAENC,EAAG,CACD,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,GAENC,EAAG,CACD,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,GAENC,EAAG,CACD,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,GAENC,EAAG,CACD,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,GAENC,EAAG,CACD,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,GAENC,EAAG,CACD,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,GAENC,EAAG,CACD,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,GAENC,EAAG,CACD,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,ICjNFC,EAAgBnB,EAAsB,WAExCoB,EAAW,SAACC,GAAD,MAAU,CAEvBC,KAAMH,EACNI,QAAS,SAACD,GACRD,GAAI,SAACG,GAAD,mBAAC,eAAgBA,GAAjB,IAAwBF,KAAMtB,EAAsBsB,SAQ1DG,YAAa,EACbC,eAAgB,SAACD,GAAD,OAAiBJ,GAAI,SAACG,GAAD,mBAAC,eAAgBA,GAAjB,IAAwBC,oBAG7DE,QAAS,eACTC,WAAY,SAACD,GAAD,OAAaN,GAAI,SAACG,GAAD,mBAAC,eAAgBA,GAAjB,IAAwBG,gBAGrDE,OAAO,EACPC,YAAa,kBACXT,GAAI,SAACG,GAAD,MAAY,CAAEK,OAAQL,EAAMK,MAAOE,oBAAoB,OAG7DC,UAAW1B,EACX2B,gBAAiB,YAAuB,IAApBC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,KAC1Bd,GAAI,SAACG,GACHA,EAAMQ,UAAUE,GAAQC,IAASX,EAAMQ,UAAUE,GAAQC,OAG7DC,iBAAkB,YAAuB,IAApBF,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,KAC3Bd,GAAI,SAACG,GACHA,EAAMQ,UAAUE,GAAQC,IAAQ,MAKpCE,aAAc,IACdC,gBAAiB,SAACD,GAAD,OACfhB,GAAI,SAACG,GAAD,mBAAC,eAAgBA,GAAjB,IAAwBa,qBAI9BN,oBAAoB,EACpBQ,yBAA0B,WACxBlB,GAAI,SAACG,GAAD,MAAY,CACdO,oBAAqBP,EAAMO,mBAC3BN,YAAa,OAKjBe,OAAQ,GACRC,UAAW,SAACD,GAAD,OAAYnB,GAAI,SAACG,GAAD,mBAAC,eAAgBA,GAAjB,IAAwBgB,iBAGrDpB,EAAWsB,mBAAStB,GAELA,I,gEAAAA,GADfA,EAAWuB,IAAOvB,GC1DHwB,GARGjD,IAAOkD,IAAV,8ICCTC,GAAiBnD,IAAOkD,IAAV,yHAgBLE,GATE,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,WAC7B,OACE,eAACH,GAAD,WACE,cAAC,GAAD,UAAYE,IACZ,cAAC,GAAD,UAAYC,QCGHC,GAfG,SAAC,GAA0B,IAAzBD,EAAwB,EAAxBA,WAAYT,EAAY,EAAZA,OAG9B,GAFcpB,GAAS+B,WAAWtB,MAEvB,CACT,IAAMuB,EAAWC,SAASC,cAAT,eAA+BL,IAChDG,EAASG,QACTH,EAASI,YAAc,EACvBJ,EAASZ,OAASA,EAAS,IAC3BY,EAASK,OACT,IAAMC,EAAYL,SAASC,cAAT,oBAAoCL,IACtDS,EAAUC,UAAUC,IAAI,OACxBC,YAAW,WAAOH,EAAUC,UAAUG,OAAO,SAAS,OCPpDC,GAAepE,IAAOkD,IAAV,qGAMZmB,GAAYrE,IAAOuC,OAAV,koBACX,GAUA,GAQA,IAgEW+B,GA/CH,SAAC,GAAoB,IAAlBhB,EAAiB,EAAjBA,WACb,EAAgCiB,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACMvC,EAAQT,IAAS,SAACI,GAAD,OAAWA,EAAMK,SAClCP,EAAOF,IAAS,SAACI,GAAD,OAAWA,EAAMF,QACjCM,EAAaR,IAAS,SAACI,GAAD,OAAWA,EAAMI,cACvCY,EAASpB,IAAS,SAACI,GAAD,OAAWA,EAAMgB,UACnC6B,EAAeC,mBACfC,EAAcD,mBAUpB,OARAE,qBAAU,WACRJ,EACEK,gBAAA,kBACanD,EAAKjB,IADlB,YACyBiB,EAAKoD,KAAKzB,GAAY0B,SAGhD,CAACrD,EAAM2B,EAAYT,EAAQZ,IAG5B,eAACmC,GAAD,WACE,cAACC,GAAD,CACEY,IAAKP,EACLQ,UAAU,WACVC,GAAE,mBAAc7B,GAChB8B,QAAS,WACPnD,EAAWN,EAAKoD,KAAKzB,GAAY+B,MACjC9B,GAAU,CAAED,WAAYA,EAAYT,OAAQA,KAE9CyC,UAAWpD,EARb,SAUE,uBACE+C,IAAKL,EACLM,UAAU,OACVC,GAAE,cAAS7B,GACXiC,IAAKf,EACLgB,KAAK,aALP,yDAUF,cAAC,GAAD,CACElC,WAAYA,EACZD,UAAW1B,EAAKoD,KAAKzB,GAAY+B,WC1E1BI,GAfF,CACX,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KCDIC,GAAW1F,IAAOkD,IAAV,wGAuCCyC,GAjCF,WACX,IAAMhE,EAAOF,IAAS,SAACI,GAAD,OAAWA,EAAMF,QACjCM,EAAaR,IAAS,SAACI,GAAD,OAAWA,EAAMI,cACvCY,EAASpB,IAAS,SAACI,GAAD,OAAWA,EAAMgB,UAkBzC,OAhBAgC,qBAAU,WAGR,IAAMe,EAAiB,SAACC,GACtB,IAAMC,EAAMD,EAAEC,IAAIC,cACdN,GAAKO,SAASF,KAChB7D,EAAWN,EAAKoD,KAAKe,GAAKT,MAC1B9B,GAAU,CAAED,WAAYwC,EAAKjD,OAAQA,MAIzC,OADAa,SAASuC,iBAAiB,WAAYL,GAC/B,WACLlC,SAASwC,oBAAoB,WAAYN,MAE1C,CAACjE,EAAMM,EAAYY,IAGpB,cAAC6C,GAAD,UACGD,GAAKU,KAAI,SAACL,EAAKM,GAAN,OACR,cAAC,GAAD,CACE9C,WAAYwC,GADd,cAEcA,UCvChBO,GAA0BC,YAAH,yLAMvBC,GAAmBvG,IAAOkD,IAAV,gOAKPmD,IAQTG,GAAuBF,YAAH,wmBAuBpBG,GAAgBzG,IAAOkD,IAAV,4wBAMf,GAMA,GACWsD,IAqCAE,GAbC,WACd,IAAM1E,EAAUP,IAAS,SAACI,GAAD,OAAWA,EAAMG,WACpCE,EAAQT,IAAS,SAACI,GAAD,OAAWA,EAAMK,SAExC,OACE,cAACqE,GAAD,CAAkBrB,UAAWhD,EAAQ,KAAO,MAA5C,SACE,cAACuE,GAAD,CAAevB,UAAWhD,EAAQ,KAAO,MAAzC,SACE,qBAAKiD,GAAG,UAAR,SAAmBjD,EAAQF,EAAU,YCrFvC2E,GAAc3G,IAAOkD,IAAV,qGAqCF0D,GA/BA,WACb,IAAM/D,EAASpB,IAAS,SAACI,GAAD,OAAWA,EAAMgB,UACnCC,EAAYrB,IAAS,SAACI,GAAD,OAAWA,EAAMiB,aACtCZ,EAAQT,IAAS,SAACI,GAAD,OAAWA,EAAMK,SAClCD,EAAaR,IAAS,SAACI,GAAD,OAAWA,EAAMI,cAQ7C,OACE,eAAC0E,GAAD,WACE,uBACEnB,KAAK,QACLqB,IAAI,IACJC,IAAI,MACJC,MAAOlE,EACPmE,SAbqB,SAACnB,GAC1B,IAAMhD,EAASgD,EAAEoB,OAAOF,MACxBjE,EAAUD,GACVZ,EAAW,UAAD,OAAWiF,OAAOrE,GAAQsE,SAAS,EAAG,KAAtC,OAWNjC,UAAU,SACVC,GAAG,UACHG,UAAWpD,IAEb,cAAC,GAAD,yB,gBCvBAkF,GAAqBpH,IAAOkD,IAAV,qGAMlBmE,GAAkBrH,IAAOkD,IAAV,sIAQfoE,GAAqBtH,IAAOuC,OAAV,0bAsBlBgF,GAAmBvH,YAAOwH,KAAPxH,CAAH,6HAIlB,IAGEyH,GAAqBzH,IAAO0H,OAAV,wNA0ETC,GAjEM,WACnB,IAAMhG,EAAOF,IAAS,SAACI,GAAD,OAAWA,EAAMF,QACjCC,EAAUH,IAAS,SAACI,GAAD,OAAWA,EAAMD,WACpCM,EAAQT,IAAS,SAACI,GAAD,OAAWA,EAAMK,SAClCD,EAAaR,IAAS,SAACI,GAAD,OAAWA,EAAMI,cAE7C4C,qBAAU,WACR5C,EAAWN,EAAK0D,QACf,CAAC1D,EAAMM,IA2BV,OACE,eAACmF,GAAD,WACE,eAACC,GAAD,WACE,cAACC,GAAD,CAAoBlC,QAxBT,WAEf,IAAMwC,EAAerH,EAAWA,WAAWsH,WACzC,SAACC,GAAD,OAAaA,IAAYnG,KAErBoG,EACa,IAAjBH,EAAqBrH,EAAWA,WAAWyH,OAAS,EAAIJ,EAAe,EACzEhG,EACErB,EAAWA,WAAWwH,EAAYxH,EAAWA,WAAWyH,QAAQtH,MAgB9D,SACE,cAAC6G,GAAD,CAAkBU,KAAMC,SAE1B,cAACT,GAAD,CACET,SAAU,SAACnB,GAAD,OAhCG,SAACA,GACpBjE,EAAQiE,EAAEoB,OAAOF,OA+BMoB,CAAatC,IAC9BkB,MAAOpF,EAAKjB,IACZyE,GAAG,cACHE,KAAK,OACLC,UAAWpD,EALb,SAOGkG,OAAOC,OAAO9H,EAAWA,YAAY4F,KAAI,SAACL,GACzC,OACE,wBAAsBiB,MAAOjB,EAAIpF,IAAjC,SACGoF,EAAIT,MADMS,EAAIpF,UAMvB,cAAC4G,GAAD,CAAoBlC,QA9BT,WAEf,IAAMkD,EACJ/H,EAAWA,WAAWsH,WAAU,SAACC,GAAD,OAAaA,IAAYnG,KAAQ,EACnEC,EACErB,EAAWA,WAAW+H,EAAY/H,EAAWA,WAAWyH,QAAQtH,MAyB9D,SACE,cAAC6G,GAAD,CAAkBU,KAAMM,YAG5B,cAAC,GAAD,8BCrHAC,GAAoBxI,IAAOkD,IAAV,6HAQjBuF,GAAczI,IAAOkD,IAAV,uFAkBFwF,GAZE,WACf,OACE,eAACF,GAAD,WACE,cAAC,GAAD,IACA,eAACC,GAAD,WACE,cAAC,GAAD,IACA,cAAC,GAAD,W,SCtBFE,GAAwB3I,IAAOuC,OAAV,60BAyFZqG,GA9CS,SAAC,GAAsB,IAApBrG,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,KAC3BN,EAAQT,IAAS,SAACI,GAAD,OAAWA,EAAMK,SAClC2G,EAAOpH,IAAS,SAACI,GAAD,OAAWA,EAAMQ,UAAUE,GAAQC,MACnDsG,EAAWrH,IAAS,SAACI,GAAD,OAAWA,EAAMS,mBACrCR,EAAcL,IAAS,SAACI,GAAD,OAAWA,EAAMC,eACxCe,EAASpB,IAAS,SAACI,GAAD,OAAWA,EAAMgB,UAIzCgC,qBAAU,WACJgE,GAAQ/G,IAAgBU,GAC1Be,GAAU,CAACD,WAAYf,EAAQM,OAAQA,MAExC,CAACgG,EAAMtG,EAAQC,EAAMV,EAAae,IAuBrC,OACE,cAAC8F,GAAD,CACEvD,QAvBgB,WAClB0D,EAAS,CAAEvG,OAAQA,EAAQC,KAAMA,KAuB/B0C,UAnBGhD,EACDJ,IAAgBU,EACdqG,EACK,OAEA,MAGLA,EACK,OAEA,KAXQ,eC/DjBE,GAAqB/I,IAAOkD,IAAV,qHAmCT8F,GA5BM,WACnB,IAAM9G,EAAQT,IAAS,SAACI,GAAD,OAAWA,EAAMK,SAClCD,EAAaR,IAAS,SAACI,GAAD,OAAWA,EAAMI,cACvCS,EAAejB,IAAS,SAACI,GAAD,OAAWA,EAAMa,gBACzCC,EAAkBlB,IAAS,SAACI,GAAD,OAAWA,EAAMc,mBAOlD,OACE,eAACoG,GAAD,WACE,uBACEvD,KAAK,QACLqB,IAAI,KACJC,IAAI,MACJC,MAAOrE,EACPsE,SAAU,SAACnB,GAAD,OAZSoD,EAYcpD,EAAEoB,OAAOF,MAX9CpE,EAAgBsG,QAChBhH,EAAW,GAAD,OAAIiF,OAAOxE,GAAcyE,SAAS,EAAG,KAArC,SAFY,IAAC8B,GAanB/D,UAAU,SACVC,GAAG,UACHG,UAAWpD,IAEb,cAAC,GAAD,gCC5BAgH,GAAiBlJ,IAAOkD,IAAV,sjBA4BdiG,GAAenJ,YAAOwH,KAAPxH,CAAH,uUAwCHoJ,GAxBY,WACzB,IAAMhH,EAAqBX,IAAS,SAACI,GAAD,OAAWA,EAAMO,sBAC/CQ,EAA2BnB,IAC/B,SAACI,GAAD,OAAWA,EAAMe,4BAOnB,OACE,cAACsG,GAAD,CACE9D,QANgB,WAClBxC,KAMEsC,UAAW9C,EAAqB,UAAY,KAF9C,SAIE,cAAC+G,GAAD,CACElB,KAAMoB,KAENnE,UAAW9C,EAAqB,UAAY,UC1D9CkH,GAAiBtJ,IAAOkD,IAAV,iJAKhB,IAKEqG,GAAoBvJ,IAAOkD,IAAV,4EAKjBsG,GAAyBxJ,IAAOkD,IAAV,0JAQtBuG,GAAezJ,IAAOkD,IAAV,4HAOZwG,GAAiB1J,IAAOkD,IAAV,qHAMdyG,GAAuB3J,IAAOkD,IAAV,iGAKpB0G,GAAgB5J,YAAOwH,KAAPxH,CAAH,iKAIf,GAGA,IA6EW6J,GAtEG,WAChB,IAAMlI,EAAOF,IAAS,SAACI,GAAD,OAAWA,EAAMF,QACjCG,EAAcL,IAAS,SAACI,GAAD,OAAWA,EAAMC,eACxCC,EAAiBN,IAAS,SAACI,GAAD,OAAWA,EAAME,kBAC3CM,EAAYZ,IAAS,SAACI,GAAD,OAAWA,EAAMQ,aACtCK,EAAejB,IAAS,SAACI,GAAD,OAAWA,EAAMa,gBACzCN,EAAqBX,IAAS,SAACI,GAAD,OAAWA,EAAMO,sBAC/CK,EAAmBhB,IAAS,SAACI,GAAD,OAAWA,EAAMY,oBAC7CP,EAAQT,IAAS,SAACI,GAAD,OAAWA,EAAMK,SAKxC2C,qBAAU,WACR,IAAMiF,EAAWC,aAAY,WACvB7H,GAASE,GAEPL,EADJD,GAAe,GAAKA,GAAe,GAChB,EACAA,EAAc,KAEjC,IAAOY,EAAgB,IAC3B,OAAO,kBAAMsH,cAAcF,MAC1B,CAAChI,EAAaC,EAAgBW,EAAcN,EAAoBF,IAQnE,OACE,eAACoH,GAAD,WACE,eAACC,GAAD,WACE,cAAC,GAAD,IACA,cAAC,GAAD,OAEF,cAACC,GAAD,UACG/D,GAAKU,KAAI,SAAC5D,GACT,OACE,eAACmH,GAAD,WACE,eAACD,GAAD,WACE,cAACE,GAAD,UACG,aAAIM,MAAM,IAAIxE,QAAQU,KAAI,SAAC3D,GAC1B,OACE,cAAC,GAAD,CAEED,OAAQA,EAGRC,KAAMA,EAAO,GALf,oBACoBD,EADpB,YAC8BC,EAAO,SAS3C,cAACoH,GAAD,CACE3B,KAAMiC,KACN9E,QAAS,kBAhCC,SAAC7C,GACzB6F,OAAO3C,KAAKpD,EAAUE,IAAS4H,SAAQ,SAAC3H,GACtCC,EAAiB,CAAEF,OAAQA,EAAQC,KAAMA,OA8Bd4H,CAAkB7H,SAGrC,cAAC,GAAD,UACGZ,EAAKoD,KAAKxC,GAAQ8C,MADrB,oBAA6B9C,MApB/B,0BAAwCA,aClG9C8H,GAAoBrK,IAAOuC,OAAV,kiBAoCjB+H,GAAYtK,YAAOwH,KAAPxH,CAAH,kDAiCAuK,GA7BK,WAClB,IAAMrI,EAAQT,IAAS,SAACI,GAAD,OAAWA,EAAMK,SAClCC,EAAcV,IAAS,SAACI,GAAD,OAAWA,EAAMM,eACxCJ,EAAiBN,IAAS,SAACI,GAAD,OAAWA,EAAME,kBAE3CyI,EAAgB,IAAIC,MACxB3F,8CAEI4F,EAAiB,IAAID,MACzB3F,+CAaF,OACE,cAACuF,GAAD,CAAmBjF,QAXD,YACJ,IAAVlD,GACFH,EAAe,GACf2I,EAAe5G,QAEf0G,EAAc1G,OAEhB3B,KAIyC+C,UAAWhD,EAAQ,KAAO,KAAnE,SACE,cAACoI,GAAD,CAAWrC,KAAM0C,UCvER,OAA0B,oCCA1B,OAA0B,qCCK1BC,eAAf,2OAIUC,GACAC,ICkBKC,I,qBAAAA,GA1Bf,WAGE,MAAoCxG,mBAAS,CAC3CyG,WAAOC,EACPC,YAAQD,IAFV,mBAAOE,EAAP,KAAmBC,EAAnB,KAoBA,OAhBAvG,qBAAU,WAER,SAASwG,IAEPD,EAAc,CACZJ,MAAOM,OAAOC,WACdL,OAAQI,OAAOE,cAQnB,OAJAF,OAAOrF,iBAAiB,SAAUoF,GAElCA,IAEO,kBAAMC,OAAOpF,oBAAoB,SAAUmF,MACjD,IACIF,GCfHM,GAASzL,IAAOkD,IAAV,sQAQc4B,kCAKpB4G,GAAoB1L,IAAOkD,IAAV,gKAEG4B,kCAMpB6G,GAA4B3L,IAAOkD,IAAV,8bAsBzB0I,GAAuB5L,IAAOkD,IAAV,yFAMpB2I,GAA6B7L,IAAOkD,IAAV,6IAO1B4I,GAAY9L,IAAOkD,IAAV,mJAQT6I,GAAqB/L,IAAOC,GAAV,0HA2CT+L,OApCf,WACE,IAAMb,EAAaJ,KAEnB,OACE,cAACU,GAAD,CAAQvG,UAAU,MAAlB,SACGiG,EAAWH,MAAQ,IAClB,qCACE,cAAC,GAAD,IACA,cAACU,GAAD,UACE,eAACC,GAAD,WACE,eAACC,GAAD,WACE,eAACE,GAAD,WACE,cAAC,GAAD,IACA,cAAC,EAAD,OAEF,eAACD,GAAD,WACE,cAAC,GAAD,IACA,cAAC,GAAD,UAGJ,cAAC,GAAD,YAKN,8BACE,cAACE,GAAD,0JCtGVE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFzI,SAAS0I,eAAe,U","file":"static/js/main.e8ac71f8.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst TitleText = styled.h1`\n  color: #d1d1d1;\n  margin: 0;\n  font-family: 'Orbitron', sans-serif;\n  font-weight: 700;\n  text-shadow: 0px -2px 0px #000, 0px 1px 1px #666;\n`;\n\nconst ContrastText = styled.span`\n  color: #ff0000;\n`;\n\nconst Title = () => {\n  return (\n    <>\n      <TitleText>\n        <ContrastText>FCC</ContrastText>3000\n      </TitleText>\n    </>\n  );\n};\n\nexport default Title;\n","import soundBanks from \"./sounds.json\";\n\nconst getSoundBankFromTitle = (title) => {\n  return soundBanks.soundBanks.filter(data => {\n    return data.url === title\n  })[0];\n}\n\nexport default getSoundBankFromTitle;","// import keys from \"./tools/keys\";\n\nconst sequencerInit = {\n  Q: {\n    1: true,\n    2: false,\n    3: false,\n    4: false,\n    5: false,\n    6: false,\n    7: false,\n    8: false,\n    9: false,\n    10: false,\n    11: true,\n    12: false,\n    13: false,\n    14: false,\n    15: false,\n    16: false,\n  },\n  W: {\n    1: true,\n    2: false,\n    3: false,\n    4: true,\n    5: false,\n    6: true,\n    7: false,\n    8: false,\n    9: false,\n    10: false,\n    11: true,\n    12: false,\n    13: true,\n    14: false,\n    15: false,\n    16: false,\n  },\n  E: {\n    1: false,\n    2: false,\n    3: false,\n    4: false,\n    5: false,\n    6: false,\n    7: false,\n    8: false,\n    9: false,\n    10: false,\n    11: false,\n    12: false,\n    13: false,\n    14: false,\n    15: false,\n    16: false,\n  },\n  R: {\n    1: false,\n    2: false,\n    3: false,\n    4: false,\n    5: false,\n    6: false,\n    7: false,\n    8: false,\n    9: false,\n    10: false,\n    11: false,\n    12: false,\n    13: false,\n    14: false,\n    15: false,\n    16: false,\n  },\n  A: {\n    1: false,\n    2: false,\n    3: false,\n    4: false,\n    5: false,\n    6: false,\n    7: false,\n    8: false,\n    9: false,\n    10: false,\n    11: false,\n    12: false,\n    13: false,\n    14: false,\n    15: false,\n    16: false,\n  },\n  S: {\n    1: false,\n    2: false,\n    3: false,\n    4: false,\n    5: false,\n    6: false,\n    7: true,\n    8: false,\n    9: false,\n    10: false,\n    11: false,\n    12: false,\n    13: false,\n    14: true,\n    15: false,\n    16: false,\n  },\n  D: {\n    1: false,\n    2: true,\n    3: false,\n    4: false,\n    5: false,\n    6: false,\n    7: false,\n    8: true,\n    9: false,\n    10: true,\n    11: false,\n    12: false,\n    13: false,\n    14: false,\n    15: true,\n    16: false,\n  },\n  F: {\n    1: false,\n    2: false,\n    3: false,\n    4: false,\n    5: false,\n    6: false,\n    7: false,\n    8: false,\n    9: false,\n    10: false,\n    11: false,\n    12: false,\n    13: false,\n    14: false,\n    15: false,\n    16: false,\n  },\n  Z: {\n    1: false,\n    2: false,\n    3: false,\n    4: false,\n    5: false,\n    6: false,\n    7: false,\n    8: false,\n    9: false,\n    10: false,\n    11: false,\n    12: false,\n    13: false,\n    14: false,\n    15: false,\n    16: false,\n  },\n  X: {\n    1: false,\n    2: false,\n    3: false,\n    4: false,\n    5: false,\n    6: false,\n    7: false,\n    8: false,\n    9: false,\n    10: false,\n    11: false,\n    12: false,\n    13: false,\n    14: false,\n    15: false,\n    16: false,\n  },\n  C: {\n    1: false,\n    2: false,\n    3: false,\n    4: true,\n    5: false,\n    6: false,\n    7: false,\n    8: false,\n    9: false,\n    10: false,\n    11: false,\n    12: true,\n    13: false,\n    14: false,\n    15: false,\n    16: false,\n  },\n  V: {\n    1: true,\n    2: false,\n    3: false,\n    4: false,\n    5: false,\n    6: false,\n    7: false,\n    8: false,\n    9: false,\n    10: false,\n    11: false,\n    12: false,\n    13: false,\n    14: false,\n    15: false,\n    16: false,\n  },\n};\n\n\n// this currently crashes the site\n// figure out what's wrong\n// until then, keep using the bad declarative version\n\n// const keysForGenerateSequencerInit = keys;\n// const generateSequencerInit = (\n//   keys = keysForGenerateSequencerInit,\n//   steps = 16\n// ) => {\n//   let sequencerInit = {};\n//   for (let key of keys) {\n//     sequencerInit[key] = {};\n//     for (let step of steps) {\n//       sequencerInit[key][step] = false;\n//     }\n//   }\n//   console.log(sequencerInit);\n//   return sequencerInit;\n// };\n\nexport default sequencerInit;\n// export default generateSequencerInit;\n","import create from \"zustand\";\nimport { devtools } from \"zustand/middleware\";\nimport getSoundBankFromTitle from \"./helpers\";\nimport sequencerInit from \"./sequencer\";\n\n/*\n * get necessary data for initializing the store\n */\nconst soundBankInit = getSoundBankFromTitle(\"nujabes\");\n\nlet useStore = (set) => ({\n  // name and file location of sounds in the sound bank\n  bank: soundBankInit,\n  setBank: (bank) => {\n    set((state) => ({ ...state, bank: getSoundBankFromTitle(bank) }));\n  },\n\n  // TODO having the current step instead of maybe something like an array of steps means that\n  // every sequencer pad gets rerendered everytime the step changes\n  // (confirm this with a console log in useEffect)\n  // so instead it's probably better to have an array or something, and have each pad only\n  // know about the state of its location in the array?\n  currentStep: 0,\n  setCurrentStep: (currentStep) => set((state) => ({ ...state, currentStep })),\n\n  // what the display is currently showing\n  display: \"Drum Machine\",\n  setDisplay: (display) => set((state) => ({ ...state, display })),\n\n  // drum machine / sequencer power\n  power: true,\n  togglePower: () =>\n    set((state) => ({ power: !state.power, sequencerIsPlaying: false })),\n\n  // on/off status of all sound buttons on the sequencer\n  sequencer: sequencerInit,\n  toggleSequencer: ({ button, step }) => {\n    set((state) => {\n      state.sequencer[button][step] = !state.sequencer[button][step];\n    });\n  },\n  turnOffSequencer: ({ button, step }) => {\n    set((state) => {\n      state.sequencer[button][step] = false;\n    });\n  },\n\n  // BPM of the sequencer\n  sequencerBPM: 110,\n  setSequencerBPM: (sequencerBPM) =>\n    set((state) => ({ ...state, sequencerBPM })),\n\n  // is the sequencer playing or not\n  // toggling the sequencer also resets its current position to 0\n  sequencerIsPlaying: false,\n  toggleSequencerIsPlaying: () => {\n    set((state) => ({\n      sequencerIsPlaying: !state.sequencerIsPlaying,\n      currentStep: 0,\n    }));\n  },\n\n  // volume\n  volume: 50,\n  setVolume: (volume) => set((state) => ({ ...state, volume })),\n});\n\nuseStore = devtools(useStore); // TEMP - remove this in prod\nuseStore = create(useStore);\nexport default useStore;\n","import styled from \"styled-components\";\n\nconst LabelText = styled.div`\n  color: #d1d1d1;\n  margin: 0;\n  font-family: 'Orbitron', sans-serif;\n  font-weight: 400;\n  font-size: 10px;\n`;\n\nexport default LabelText;","import LabelText from \"../styled\";\nimport styled from \"styled-components\";\n\nconst StyledPadLabel = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n\nconst PadLabel = ({ labelText, triggerKey }) => {\n  return (\n    <StyledPadLabel>\n      <LabelText>{labelText}</LabelText>\n      <LabelText>{triggerKey}</LabelText>\n    </StyledPadLabel>\n  );\n};\n\nexport default PadLabel;\n","import useStore from \"../store\";\n\nconst playSound = ({triggerKey, volume}) => {\n  const power = useStore.getState().power;\n  // asdf\n  if (power) {\n    const padAudio = document.querySelector(`#pad-${triggerKey}`);\n    padAudio.pause();\n    padAudio.currentTime = 0;\n    padAudio.volume = volume / 100;\n    padAudio.play();\n    const padButton = document.querySelector(`#drum-pad-${triggerKey}`);\n    padButton.classList.add(\"hit\");\n    setTimeout(() => {padButton.classList.remove(\"hit\")}, 200);\n  }\n};\n\nexport default playSound;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport useStore from \"../store\";\nimport PadLabel from \"./PadLabel\";\nimport playSound from \"../tools/playSound\";\n\nconst PadContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n\nconst PadButton = styled.button`\n  ${\"\" /* layout */}\n  width: 120px;\n  height: 80px;\n  margin: auto;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  background-color: rgb(118, 118, 118);\n\n  ${\"\" /* border */}\n  border-radius: 8px;\n  border-style: outset;\n  border-color: rgba(255, 255, 255, 0.125);\n  border-width: 2px;\n\n  cursor: pointer;\n\n  ${\"\" /* text */}\n  color: transparent;\n\n  transition: 200ms;\n\n  &:hover {\n    background-color: rgba(215, 215, 215, 0.5);\n    box-shadow: 0px 0px 10px 5px rgba(215, 215, 215, 0.5);\n  }\n\n  &.hit {\n    background-color: salmon;\n    box-shadow: 0px 0px 10px 5px salmon;\n    transition: 0ms;\n  }\n`;\n\nconst Pad = ({ triggerKey }) => {\n  const [fileName, setFileName] = useState(\"\");\n  const power = useStore((state) => state.power);\n  const bank = useStore((state) => state.bank);\n  const setDisplay = useStore((state) => state.setDisplay);\n  const volume = useStore((state) => state.volume);\n  const padButtonRef = useRef();\n  const padAudioRef = useRef();\n\n  useEffect(() => {\n    setFileName(\n      process.env.PUBLIC_URL +\n        `/sounds/${bank.url}/${bank.pads[triggerKey].file}`\n    );\n    \n  }, [bank, triggerKey, volume, setDisplay]);\n\n  return (\n    <PadContainer>\n      <PadButton\n        ref={padButtonRef}\n        className=\"drum-pad\"\n        id={`drum-pad-${triggerKey}`}\n        onClick={() => {\n          setDisplay(bank.pads[triggerKey].name);\n          playSound({ triggerKey: triggerKey, volume: volume });\n        }}\n        disabled={!power}\n      >\n        <audio\n          ref={padAudioRef}\n          className=\"clip\"\n          id={`pad-${triggerKey}`}\n          src={fileName}\n          type=\"audio/mpeg\"\n        >\n          Your browser does not support HTML5 audio\n        </audio>\n      </PadButton>\n      <PadLabel\n        triggerKey={triggerKey}\n        labelText={bank.pads[triggerKey].name}\n      />\n    </PadContainer>\n  );\n};\n\nexport default Pad;\n","const keys = [\n  \"Q\",\n  \"W\",\n  \"E\",\n  \"R\",\n  \"A\",\n  \"S\",\n  \"D\",\n  \"F\",\n  \"Z\",\n  \"X\",\n  \"C\",\n  \"V\",\n];\n\nexport default keys;\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Pad from \"./Pad\";\nimport keys from \"../tools/keys\";\nimport useStore from \"../store\";\nimport playSound from \"../tools/playSound\";\n\n// TODO get this by iterating through the bank instead\n// (after passing the FCC requirements, because those don't allow us to have more pads)\n// also try to get 1, 2, 3, 4 back in the grid\n\nconst PadsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 120px);\n  gap: 16px;\n`;\n\nconst Pads = () => {\n  const bank = useStore((state) => state.bank);\n  const setDisplay = useStore((state) => state.setDisplay);\n  const volume = useStore((state) => state.volume);\n\n  useEffect(() => {\n    // putting this in here because it needs to be a callback with a huge\n    // dependency array otherwise\n    const handleKeyPress = (e) => {\n      const key = e.key.toUpperCase();\n      if (keys.includes(key)) {\n        setDisplay(bank.pads[key].name);\n        playSound({ triggerKey: key, volume: volume });\n      }\n    };\n    document.addEventListener(\"keypress\", handleKeyPress);\n    return () => {\n      document.removeEventListener(\"keypress\", handleKeyPress);\n    };\n  }, [bank, setDisplay, volume])\n\n  return (\n    <PadsGrid>\n      {keys.map((key, index) => (\n        <Pad\n          triggerKey={key}\n          key={`pad-${key}`}\n        />\n      ))}\n    </PadsGrid>\n  );\n};\n\nexport default Pads;\n","import React from \"react\";\nimport useStore from \"../store\";\nimport styled, { keyframes } from \"styled-components\";\n\nconst DisplayBreatheAnimation = keyframes`\n  0%   { box-shadow: 0px 0px 12px 2px lightsalmon; }\n  50%  { box-shadow: 0px 0px 14px 3px salmon; }\n  100% { box-shadow: 0px 0px 12px 2px lightsalmon; }\n`;\n\nconst DisplayContainer = styled.div`\n  background-color: white;\n  border: 2px inset rgba(0, 0, 0, 0.4);\n  border-radius: 6px;\n\n  animation: ${DisplayBreatheAnimation} 3s ease-out infinite;\n\n  &.off {\n    box-shadow: none;\n    animation: none;\n  }\n`;\n\nconst TextFlickerAnimation = keyframes`\n  0% { \n    color: #E1F1FF;\n    text-shadow: 2px 0 rgba(255, 0, 0, 0.9), -2px 0 rgba(0, 0, 255, 0.9),\n    1px 1px 2px white, 0 0 1em red, 0 0 0.2em blue;\n    background-color: salmon;\n  }\n  50% {\n    color: #FFE9E1;\n    text-shadow: 1px 0 rgba(255, 0, 0, 0.9), -1px 0 rgba(0, 0, 255, 0.9),\n    1px 1px 2px white, 0 0 1em red, 0 0 0.2em blue;\n    background-color: crimson;\n  }\n\n\n  100% {\n    color: #E1F1FF;\n    text-shadow: 2px 0 rgba(255, 0, 0, 0.9), -2px 0 rgba(0, 0, 255, 0.9),\n    1px 1px 2px white, 0 0 1em red, 0 0 0.2em blue;\n    background-color: salmon;\n  }\n`;\n\nconst StyledDisplay = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  ${\"\" /* font-family: \"Press Start 2P\", cursive; */}\n  font-family: \"D7Mono\";\n  font-size: 32px;\n\n  \n\n  ${'' /* text */}\n  animation: ${TextFlickerAnimation} 3s ease-out infinite;\n\n  background-image: linear-gradient(\n      to top,\n      rgba(255, 255, 255, 0.2) 33.33333%,\n      rgba(255, 255, 255, 0.4) 33.33333%,\n      rgba(255, 255, 255, 0.4) 66.66666%,\n      rgba(255, 255, 255, 0.6) 66.66666%\n    ),\n    linear-gradient(\n      to right,\n      rgba(255, 0, 0, 0.7) 33.33333%,\n      rgba(0, 255, 0, 0.7) 33.33333%,\n      rgba(0, 255, 0, 0.7) 66.66666%,\n      rgba(0, 0, 255, 0.7) 66.66666%\n    );\n  background-size: 3px 3px;\n  mix-blend-mode: multiply;\n\n  &.off {\n    background-color: black;\n  }\n`;\n\nconst Display = () => {\n  const display = useStore((state) => state.display);\n  const power = useStore((state) => state.power);\n\n  return (\n    <DisplayContainer className={power ? null : \"off\"}>\n      <StyledDisplay className={power ? null : \"off\"}>\n        <div id=\"display\">{power ? display : null}</div>\n      </StyledDisplay>\n    </DisplayContainer>\n  );\n};\n\nexport default Display;\n","import React from \"react\";\nimport useStore from \"../store\";\nimport styled from \"styled-components\";\nimport LabelText from \"../styled\";\n\nconst InfoElement = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n\nconst Volume = () => {\n  const volume = useStore((state) => state.volume);\n  const setVolume = useStore((state) => state.setVolume);\n  const power = useStore((state) => state.power);\n  const setDisplay = useStore((state) => state.setDisplay);\n\n  const handleVolumeChange = (e) => {\n    const volume = e.target.value;\n    setVolume(volume);\n    setDisplay(`Volume ${String(volume).padStart(3, '0')}%`);\n  };\n\n  return (\n    <InfoElement>\n      <input\n        type=\"range\"\n        min=\"1\"\n        max=\"100\"\n        value={volume}\n        onChange={handleVolumeChange}\n        className=\"slider\"\n        id=\"myRange\"\n        disabled={!power}\n      />\n      <LabelText>\n        Volume\n      </LabelText>\n    </InfoElement>\n  );\n};\n\nexport default Volume;\n","import React, { useEffect } from \"react\";\nimport useStore from \"../store\";\nimport soundBanks from \"../sounds.json\";\nimport LabelText from \"../styled\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChevronLeft,\n  faChevronRight,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst StyledBankSelector = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n\nconst BankSelectorRow = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  gap: 8px;\n`;\n\nconst BankSelectorButton = styled.button`\n  height: 32px;\n  width: 28px;\n  background-color: rgb(118, 118, 118);\n\n  border-radius: 4px;\n  border-style: outset;\n  border-color: rgba(255, 255, 255, 0.125);\n  border-width: 2px;\n\n  cursor: pointer;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    background-color: rgba(215, 215, 215, 0.5);\n    box-shadow: 0px 0px 10px 5px rgba(215, 215, 215, 0.5);\n  }\n`;\n\nconst BankSelectorIcon = styled(FontAwesomeIcon)`\n  font-size: 18px;\n  color: rgb(80, 80, 80);\n  filter: drop-shadow(0px -1px 0px black);\n  ${'' /* filter: ; */}\n`;\n\nconst BankSelectorSelect = styled.select`\n  width: 100%;\n  color: rgb(209, 209, 209);\n  background-color: rgb(59, 59, 59);\n  border: 3px inset rgb(118, 118, 118);\n  font-family: 'Orbitron', sans-serif;\n  border-radius: 4px;\n`;\n\nconst BankSelector = () => {\n  const bank = useStore((state) => state.bank);\n  const setBank = useStore((state) => state.setBank);\n  const power = useStore((state) => state.power);\n  const setDisplay = useStore((state) => state.setDisplay);\n\n  useEffect(() => {\n    setDisplay(bank.name);\n  }, [bank, setDisplay]);\n\n  const handleChange = (e) => {\n    setBank(e.target.value);\n  };\n\n  const prevBank = () => {\n    // set the current active sound bank to the previous one\n    const currentIndex = soundBanks.soundBanks.findIndex(\n      (element) => element === bank\n    );\n    const prevIndex =\n      currentIndex === 0 ? soundBanks.soundBanks.length - 1 : currentIndex - 1;\n    setBank(\n      soundBanks.soundBanks[prevIndex % soundBanks.soundBanks.length].url\n    );\n  };\n\n  const nextBank = () => {\n    // set the current active sound bank to the next one\n    const nextIndex =\n      soundBanks.soundBanks.findIndex((element) => element === bank) + 1;\n    setBank(\n      soundBanks.soundBanks[nextIndex % soundBanks.soundBanks.length].url\n    );\n  };\n\n  return (\n    <StyledBankSelector>\n      <BankSelectorRow>\n        <BankSelectorButton onClick={prevBank}>\n          <BankSelectorIcon icon={faChevronLeft} />\n        </BankSelectorButton>\n        <BankSelectorSelect\n          onChange={(e) => handleChange(e)}\n          value={bank.url}\n          id=\"bank-select\"\n          name=\"bank\"\n          disabled={!power}\n        >\n          {Object.values(soundBanks.soundBanks).map((key) => {\n            return (\n              <option key={key.url} value={key.url}>\n                {key.name}\n              </option>\n            );\n          })}\n        </BankSelectorSelect>\n        <BankSelectorButton onClick={nextBank}>\n          <BankSelectorIcon icon={faChevronRight} />\n        </BankSelectorButton>\n      </BankSelectorRow>\n      <LabelText>Sample Bank</LabelText>\n    </StyledBankSelector>\n  );\n};\n\nexport default BankSelector;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Display from \"./Display\";\nimport Volume from \"./Volume\";\nimport BankSelector from \"./BankSelector\";\n\n\nconst ControlsContainer = styled.div`\n  width: 100%;\n  height: 300px;\n  display: grid;\n  gap: 32px;\n  grid-template-rows 1fr 1fr;\n`;\n\nconst ControlsRow = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 32px;\n`;\n\nconst Controls = () => {\n  return (\n    <ControlsContainer>\n      <Display />\n      <ControlsRow>\n        <Volume />\n        <BankSelector />\n      </ControlsRow>\n    </ControlsContainer>\n  );\n};\n\nexport default Controls;\n","import React, { useEffect } from \"react\";\nimport useStore from \"../store\";\nimport styled from \"styled-components\";\nimport playSound from \"../tools/playSound\";\n\nconst StyledSequencerButton = styled.button`\n  height: 32px;\n  width: 24px;\n  background-color: rgb(118, 118, 118);\n\n  border-radius: 4px;\n  border-style: outset;\n  border-color: rgba(255, 255, 255, 0.125);\n  border-width: 2px;\n\n  cursor: pointer;\n\n  transition: 0ms;\n\n  &:hover {\n    background-color: rgba(215, 215, 215, 0.5);\n    box-shadow: 0px 0px 10px 5px rgba(215, 215, 215, 0.5);\n  }\n\n  &.play {\n    background-color: red;\n    box-shadow: 0px 0px 10px 5px red;\n    transition: 200ms;\n  }\n\n  &.hit {\n    background-color: rgb(215, 215, 215);\n    box-shadow: 0px 0px 6px 3px rgb(215, 215, 215);\n    transition: 0ms;\n  }\n\n  &.pass {\n    background-color: salmon;\n    box-shadow: 0px 0px 10px 5px salmon;\n    transition: 500ms;\n  }\n\n  &.pass:hover {\n    transition: 100ms;\n    box-shadow: 0px 0px 12px 6px salmon;\n  }\n`;\n\nconst SequencerButton = ({ button, step }) => {\n  const power = useStore((state) => state.power);\n  const isOn = useStore((state) => state.sequencer[button][step]);\n  const toggleOn = useStore((state) => state.toggleSequencer);\n  const currentStep = useStore((state) => state.currentStep);\n  const volume = useStore((state) => state.volume);\n\n  // TODO get everything we need for \n\n  useEffect(() => {\n    if (isOn && currentStep === step) {\n      playSound({triggerKey: button, volume: volume });\n    }\n  }, [isOn, button, step, currentStep, volume]);\n\n  const handleClick = () => {\n    toggleOn({ button: button, step: step });\n  };\n\n  const assignButtonClass = () => {\n    if (!power) return \"power-off\";\n    if (currentStep === step) {\n      if (isOn) {\n        return \"play\";\n      } else {\n        return \"hit\";\n      }\n    } else {\n      if (isOn) {\n        return \"pass\";\n      } else {\n        return null;\n      }\n    }\n  };\n\n  return (\n    <StyledSequencerButton\n      onClick={handleClick}\n      className={assignButtonClass()}\n    >\n      {/* <div>{isOn ? \"x\" : \"o\"}</div> */}\n    </StyledSequencerButton>\n  );\n};\n\nexport default SequencerButton;\n","import React from \"react\";\nimport useStore from \"../store\";\nimport LabelText from \"../styled\";\nimport styled from \"styled-components\";\n\nconst StyledSequencerBPM = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n\nconst SequencerBPM = () => {\n  const power = useStore((state) => state.power);\n  const setDisplay = useStore((state) => state.setDisplay);\n  const sequencerBPM = useStore((state) => state.sequencerBPM);\n  const setSequencerBPM = useStore((state) => state.setSequencerBPM);\n\n  const handleBPMChange = (bpm) => {\n    setSequencerBPM(bpm);\n    setDisplay(`${String(sequencerBPM).padStart(3, '0')} bpm`);\n  }\n\n  return (\n    <StyledSequencerBPM>\n      <input\n        type=\"range\"\n        min=\"50\"\n        max=\"180\"\n        value={sequencerBPM}\n        onChange={(e) => handleBPMChange(e.target.value)}\n        className=\"slider\"\n        id=\"myRange\"\n        disabled={!power}\n      />\n      <LabelText>Sequencer BPM</LabelText>\n    </StyledSequencerBPM>\n  );\n};\n\nexport default SequencerBPM;\n","import React from \"react\";\nimport useStore from \"../store\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlay } from \"@fortawesome/free-solid-svg-icons\";\n\nconst PlayStopButton = styled.div`\n  background-color: rgb(118, 118, 118);\n  width: 54px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  border-radius: 8px;\n  border-style: outset;\n  border-color: rgba(255, 255, 255, 0.125);\n\n  cursor: pointer;\n\n  &:hover {\n    background-color: rgba(215, 215, 215, 0.5);\n    box-shadow: 0px 0px 10px 5px rgba(215, 215, 215, 0.5);\n  }\n\n  &.playing {\n    background-color: salmon;\n    box-shadow: 0px 0px 10px 5px salmon;\n  }\n\n  &.playing:hover {\n    box-shadow: 0px 0px 12px 6px salmon;\n  }\n`;\n\nconst PlayStopIcon = styled(FontAwesomeIcon)`\n  color: rgb(80, 80, 80);\n  cursor: pointer;\n  font-size: 24px;\n  filter: drop-shadow(0px -1px 0px black);\n\n  &:hover {\n    color: rgb(80, 80, 80);\n    filter: drop-shadow(0px -1px 0px black);\n  }\n  &.playing {\n    color: indianred;\n    filter: drop-shadow(0px -1px 0px firebrick);\n  }\n`;\n\nconst SequencerIsPlaying = () => {\n  const sequencerIsPlaying = useStore((state) => state.sequencerIsPlaying);\n  const toggleSequencerIsPlaying = useStore(\n    (state) => state.toggleSequencerIsPlaying\n  );\n\n  const handleClick = () => {\n    toggleSequencerIsPlaying();\n  };\n\n  return (\n    <PlayStopButton\n      onClick={handleClick}\n      className={sequencerIsPlaying ? \"playing\" : null}\n    >\n      <PlayStopIcon\n        icon={faPlay}\n        // icon={sequencerIsPlaying ? faStop : faPlay}\n        className={sequencerIsPlaying ? \"playing\" : null}\n      />\n    </PlayStopButton>\n  );\n};\n\nexport default SequencerIsPlaying;\n","import React, { useEffect } from \"react\";\nimport SequencerButton from \"./SequencerButton\";\nimport keys from \"../tools/keys\";\nimport styled from \"styled-components\";\nimport useStore from \"../store\";\nimport SequencerBPM from \"./SequencerBPM\";\nimport SequencerIsPlaying from \"./SequencerIsPlaying\";\nimport LabelText from \"../styled\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\nconst SequencerOuter = styled.div`\n  width: 520px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  ${'' /* TODO this 25px gap is a dumb hack\n  to align things vertically. figure out\n  the correct way of doing it. */}\n  gap: 25px;\n`;\nconst SequencerControls = styled.div`\n  width: 100%;\n  display: flex;\n  gap: 32px;\n`;\nconst SequencerRowsContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  gap: 8px;\n`;\nconst SequencerRow = styled.div`\n  width: 100%;\n  display: flex;\n  gap: 16px;\n  flex-direction: row;\n  align-items: center;\n`;\nconst SequencerBlock = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\nconst SequencerButtonBlock = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n`;\nconst DeleteRowIcon = styled(FontAwesomeIcon)`\n  color: rgb(118,118,118);\n  font-size: 24px;\n  cursor: pointer;\n  ${'' /* TODO figure out a good way to offset the icons\n  probably don't want to put them on a background/button\n  so maybe a good drop-shadow? */}\n  ${'' /* filter: drop-shadow(0px 2px 0px rgba(255, 255, 255, 0.125)); */}\n\n  &:hover {\n    color: rgb(215, 215, 215);\n  }\n`;\n\nconst Sequencer = () => {\n  const bank = useStore((state) => state.bank);\n  const currentStep = useStore((state) => state.currentStep);\n  const setCurrentStep = useStore((state) => state.setCurrentStep);\n  const sequencer = useStore((state) => state.sequencer);\n  const sequencerBPM = useStore((state) => state.sequencerBPM);\n  const sequencerIsPlaying = useStore((state) => state.sequencerIsPlaying);\n  const turnOffSequencer = useStore((state) => state.turnOffSequencer);\n  const power = useStore((state) => state.power);\n\n  // TODO extract this logic into its own component? and just unmount that component when\n  // the sequences isn't playing?\n  // also then have currentStep reset to 0?\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (power && sequencerIsPlaying) {\n        currentStep <= 0 || currentStep >= 16\n          ? setCurrentStep(1)\n          : setCurrentStep(currentStep + 1);\n      }\n    }, (1000 / sequencerBPM) * 15);\n    return () => clearInterval(interval);\n  }, [currentStep, setCurrentStep, sequencerBPM, sequencerIsPlaying, power]);\n\n  const clearSequencerRow = (button) => {\n    Object.keys(sequencer[button]).forEach((step) => {\n      turnOffSequencer({ button: button, step: step });\n    });\n  };\n\n  return (\n    <SequencerOuter>\n      <SequencerControls>\n        <SequencerBPM />\n        <SequencerIsPlaying />\n      </SequencerControls>\n      <SequencerRowsContainer>\n        {keys.map((button) => {\n          return (\n            <SequencerBlock key={`sequencer-block-${button}`}>\n              <SequencerRow>\n                <SequencerButtonBlock>\n                  {[...Array(16).keys()].map((step) => {\n                    return (\n                      <SequencerButton\n                        key={`sequencer-${button}-${step + 1}`}\n                        button={button}\n                        // maybe find a function that can create a range between\n                        // two arbitrary numbers instead of doing this awful hack?\n                        step={step + 1}\n                      />\n                    );\n                  })}\n                </SequencerButtonBlock>\n                <DeleteRowIcon\n                  icon={faTrash}\n                  onClick={() => clearSequencerRow(button)}\n                />\n              </SequencerRow>\n              <LabelText key={`sequencer-${button}`}>\n                {bank.pads[button].name}\n              </LabelText>\n            </SequencerBlock>\n          );\n        })}\n      </SequencerRowsContainer>\n    </SequencerOuter>\n  );\n};\n\nexport default Sequencer;\n","import React from \"react\";\nimport useStore from \"../store\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPowerOff } from \"@fortawesome/free-solid-svg-icons\";\n\nconst StyledPowerButton = styled.button`\n  height: 48px;\n  width: 48px;\n  background: conic-gradient(\n    #d7d7d7,\n    #c3c3c3,\n    #cccccc,\n    #c6c6c6,\n    #d7d7d7,\n    #c3c3c3,\n    #cccccc,\n    #c6c6c6,\n    #d7d7d7,\n    #c3c3c3,\n    #cccccc,\n    #c6c6c6,\n    #d7d7d7,\n    #c3c3c3,\n    #cccccc,\n    #c6c6c6,\n    #d7d7d7\n  );\n  border-radius: 100%;\n  border: 3px solid;\n  border-color: #888888;\n  color: black;\n  cursor: pointer;\n\n  &.on {\n    border-color: red;\n    color: red;\n\n    box-shadow: 0px 0px 5px 1px #ffa98f;\n  }\n`;\n\nconst PowerIcon = styled(FontAwesomeIcon)`\n  font-size: 24px;\n`;\n\nconst PowerButton = () => {\n  const power = useStore((state) => state.power);\n  const togglePower = useStore((state) => state.togglePower);\n  const setCurrentStep = useStore((state) => state.setCurrentStep);\n\n  const toggleOnSound = new Audio(\n    process.env.PUBLIC_URL + \"/sounds/buttons/switch-on.mp3\"\n  );\n  const toggleOffSound = new Audio(\n    process.env.PUBLIC_URL + \"/sounds/buttons/switch-off.mp3\"\n  );\n\n  const handleClick = () => {\n    if (power === true) {\n      setCurrentStep(0);\n      toggleOffSound.play();\n    } else {\n      toggleOnSound.play();\n    }\n    togglePower();\n  };\n\n  return (\n    <StyledPowerButton onClick={handleClick} className={power ? \"on\" : null}>\n      <PowerIcon icon={faPowerOff} />\n    </StyledPowerButton>\n  );\n};\n\nexport default PowerButton;\n","export default __webpack_public_path__ + \"static/media/D7Mono.cea5d881.woff\";","export default __webpack_public_path__ + \"static/media/D7Mono.aaf571fa.woff2\";","import { createGlobalStyle } from \"styled-components\";\n\nimport D7MonoWoff from \"./D7Mono.woff\";\nimport D7MonoWoff2 from \"./D7Mono.woff2\";\n\nexport default createGlobalStyle`\n  @font-face {\n    font-family: 'D7Mono';\n    src: local('D7 Mono '), local('D7 Mono '),\n    url(${D7MonoWoff2}) format('woff2'),\n    url(${D7MonoWoff}) format('woff');\n    font-weight: 300;\n    font-style: normal;\n  }\n`","import { useState, useEffect } from \"react\";\n\nfunction useWindowSize() {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  });\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n    // Add event listener\n    window.addEventListener(\"resize\", handleResize);\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n  return windowSize;\n}\n\nexport default useWindowSize;\n","import \"./App.css\";\nimport styled from \"styled-components\";\nimport Title from \"./components/Title\";\nimport Pads from \"./components/Pads\";\nimport Controls from \"./components/Controls\";\nimport Sequencer from \"./components/Sequencer\";\nimport PowerButton from \"./components/PowerButton\";\nimport GlobalFonts from \"./fonts/fonts\";\nimport useWindowSize from \"./hooks/useWindowSize\";\n\nconst AppDiv = styled.div`\n  min-height: 100vh;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: grey;\n  background-image: url(${process.env.PUBLIC_URL + `/images/wood1.jpg`});\n  background-size: cover;\n  gap: 0px;\n`;\n\nconst DrumMachineBorder = styled.div`\n  margin: 16px;\n  background-image: url(${process.env.PUBLIC_URL + `/images/wood2.jpg`});\n  background-size: cover;\n  margin: 16px;\n  box-shadow: 0px 0px 15px 3px black;\n`;\n\nconst DrumMachineOuterContainer = styled.div`\n  background-color: #333333;\n  background-image: linear-gradient(\n    to right bottom,\n    rgb(17, 17, 17) 12.5%,\n    rgb(67, 67, 67) 25%,\n    rgb(17, 17, 17) 50%,\n    rgb(67, 67, 67) 75%,\n    rgb(17, 17, 17) 100%\n  );\n  padding: 32px;\n  margin: 0 32px; /* what does this do? */\n\n  display: flex;\n  flex-direction: row;\n  gap: 64px;\n\n  @media (max-width: 1280px) {\n    flex-direction: column;\n  }\n`;\n\nconst DrumMachineContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 32px;\n`;\n\nconst DrumMachineBottomContainer = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 32px;\n  justify-content: space-between;\n`;\nconst HeaderRow = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst ScreenSizeReminder = styled.h1`\n  margin: 32px;\n  color: white;\n  text-shadow: 2px 2px 2px black;\n  text-align: center;\n`;\n\nfunction App() {\n  const windowSize = useWindowSize();\n\n  return (\n    <AppDiv className=\"App\">\n      {windowSize.width > 640 ? (\n        <>\n          <GlobalFonts />\n          <DrumMachineBorder>\n            <DrumMachineOuterContainer>\n              <DrumMachineContainer>\n                <HeaderRow>\n                  <PowerButton />\n                  <Title />\n                </HeaderRow>\n                <DrumMachineBottomContainer>\n                  <Controls />\n                  <Pads />\n                </DrumMachineBottomContainer>\n              </DrumMachineContainer>\n              <Sequencer />\n            </DrumMachineOuterContainer>\n          </DrumMachineBorder>\n        </>\n      ) : (\n        <div>\n          <ScreenSizeReminder>\n            Display width needs to be at least 640px. This app is designed for\n            tablets and PCs, but not for phones and other small-screen devices.\n          </ScreenSizeReminder>\n        </div>\n      )}\n    </AppDiv>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}