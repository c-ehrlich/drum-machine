{"version":3,"sources":["helpers.js","store.js","components/BankSelector.jsx","components/Display.jsx","components/PowerButton.jsx","components/Pad.jsx","components/Pads.jsx","components/Reverb.jsx","components/Volume.jsx","App.js","reportWebVitals.js","index.js"],"names":["getSoundBankFromTitle","title","soundBanks","filter","data","url","soundBankInit","useStore","set","power","togglePower","state","volume","setVolume","display","setDisplay","bank","setBank","devtools","create","BankSelector","htmlFor","onChange","e","target","value","handleChange","defaultValue","id","name","Object","values","map","key","Display","PowerButton","onClick","PadButton","styled","button","Pad","triggerKey","useState","fileName","setFileName","playSound","useCallback","console","log","pads","file","slice","pad","document","querySelector","pause","currentTime","play","useEffect","handleKeyPress","toLowerCase","addEventListener","removeEventListener","className","disabled","src","type","keys","PadsGrid","div","Pads","index","Reverb","Volume","min","max","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.05a95612.chunk.js","sourcesContent":["import soundBanks from \"./sounds.json\";\n\nconst getSoundBankFromTitle = (title) => {\n  return soundBanks.soundBanks.filter(data => {\n    return data.url === title\n  })[0];\n}\n\nexport default getSoundBankFromTitle;","import create from \"zustand\";\nimport { devtools } from \"zustand/middleware\"\nimport getSoundBankFromTitle from \"./helpers\";\n\nconst soundBankInit = getSoundBankFromTitle(\"nujabes\");\n\nlet useStore = set => ({\n  power: true,\n  togglePower: () => set(state => ({ power: !state.power })),\n  volume: 50,\n  setVolume: (volume) => set(state => ({ ...state, volume })),\n  display: \"Drum Machine\",\n  setDisplay: (display) => set(state => ({ ...state, display })),\n  bank: soundBankInit,\n  setBank: (bank) => {\n    set(state => ({ ...state, bank: getSoundBankFromTitle(bank) }));\n  },\n})\n\nuseStore = devtools(useStore);\nuseStore = create(useStore);\nexport default useStore;\n","import React from \"react\";\nimport useStore from \"../store\";\nimport soundBanks from \"../sounds.json\";\n\nconst BankSelector = () => {\n  const bank = useStore((state) => state.bank);\n  const setBank = useStore((state) => state.setBank);\n\n  const handleChange = (e) => {\n    setBank(e.target.value);\n  };\n\n  return (\n    <div>\n      <label htmlFor=\"bank-select\">Choose a Bank</label>\n      <select\n        onChange={(e) => handleChange(e)}\n        defaultValue={bank.url}\n        id=\"bank-select\"\n        name=\"bank\"\n      >\n        {Object.values(soundBanks.soundBanks).map(key => {\n          return <option key={key.url} value={key.url}>{key.name}</option>\n        })}\n      </select>\n    </div>\n  );\n};\n\nexport default BankSelector;\n","import React from \"react\";\nimport useStore from \"../store\";\n\nconst Display = () => {\n  const display = useStore(state => state.display);\n\n  return <div id=\"display\">Display: {display}</div>;\n};\n\nexport default Display;\n","import React from 'react'\nimport useStore from '../store'\n\nconst PowerButton = () => {\n  const power = useStore(state => state.power);\n  const togglePower = useStore(state => state.togglePower)\n\n  return (\n    <div>\n      <button onClick={togglePower}>Power: { power ? \"on\" : \"off\" }</button>\n    </div>\n  )\n}\n\nexport default PowerButton\n","import React, { useEffect, useCallback, useState } from \"react\";\nimport styled from \"styled-components\";\nimport useStore from \"../store\";\n\nconst PadButton = styled.button`\n  border: 1px solid black;\n  width: 200px;\n  margin: auto;\n`;\n\nconst Pad = ({ triggerKey }) => {\n  const setDisplay = useStore((state) => state.setDisplay);\n  const [fileName, setFileName] = useState(\"\");\n  const power = useStore((state) => state.power);\n  const bank = useStore((state) => state.bank);\n  const volume = useStore((state) => state.volume);\n\n  const playSound = useCallback(() => {\n    console.log(`playing ${fileName}`);\n    setDisplay(bank.pads[triggerKey].file.slice(0, -4));\n    const pad = document.querySelector(`#${triggerKey}`);\n    pad.pause();\n    pad.currentTime = 0;\n    pad.volume = volume / 100;\n    pad.play();\n  }, [fileName, setDisplay, triggerKey, bank.pads, volume]);\n\n  useEffect(() => {\n    setFileName(`sounds/${bank.url}/${bank.pads[triggerKey].file}`);\n    const handleKeyPress = (e) => {\n      if (e.key === triggerKey || e.key === triggerKey.toLowerCase()) {\n        playSound();\n      }\n    };\n\n    document.addEventListener(\"keypress\", handleKeyPress);\n\n    return () => {\n      document.removeEventListener(\"keypress\", handleKeyPress);\n    };\n  }, [bank, playSound, triggerKey]);\n\n  return (\n    <PadButton\n      className=\"drum-pad\"\n      id={`drum-pad-${triggerKey}`}\n      onClick={playSound}\n      disabled={!power}\n    >\n      {triggerKey}\n      <audio className=\"clip\" id={triggerKey} src={fileName} type=\"audio/mpeg\">\n        Your browser does not support HTML5 audio\n      </audio>\n    </PadButton>\n  );\n};\n\nexport default Pad;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Pad from \"./Pad\";\n\n// TODO get this by iterating through the bank instead\n// (after passing the FCC requirements, because those don't allow us to have more pads)\n// also try to get 1, 2, 3, 4 back in the grid\nconst keys = [\n  \"Q\",\n  \"W\",\n  \"E\",\n  // \"R\",\n  \"A\",\n  \"S\",\n  \"D\",\n  // \"F\",\n  \"Z\",\n  \"X\",\n  \"C\",\n  // \"V\",\n];\n\nconst PadsGrid = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 1fr 1fr 1fr;\n  grid-template-columns: 1fr 1fr 1fr /*1fr*/;\n  gap: 8px;\n`;\n\nconst Pads = () => {\n  return (\n    <PadsGrid>\n      {keys.map((key, index) => (\n        <Pad\n          triggerKey={key}\n          key={`pad-${key}`}\n        />\n      ))}\n    </PadsGrid>\n  );\n};\n\nexport default Pads;\n","import React from 'react'\n\nconst Reverb = () => {\n  return (\n    <div>\n      Reverb\n    </div>\n  )\n}\n\nexport default Reverb\n","import React from \"react\";\nimport useStore from \"../store\";\n\nconst Volume = () => {\n  const volume = useStore((state) => state.volume);\n  const setVolume = useStore((state) => state.setVolume);\n\n  const handleVolumeChange = (e) => {\n    setVolume(e.target.value);\n  }\n\n  return (\n    <div>\n      Volume: {volume}\n      <div className=\"slidecontainer\">\n        <input\n          type=\"range\"\n          min=\"1\"\n          max=\"100\"\n          value={volume}\n          onChange={handleVolumeChange}\n          className=\"slider\"\n          id=\"myRange\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Volume;\n","import \"./App.css\";\nimport BankSelector from \"./components/BankSelector\";\nimport Display from \"./components/Display\";\nimport PowerButton from \"./components/PowerButton\";\nimport Pads from \"./components/Pads\";\nimport Reverb from \"./components/Reverb\";\nimport Volume from \"./components/Volume\";\n\nfunction App() {\n  return (\n    <div className=\"App\" id=\"drum-machine\">\n      <h1>GH Pages Test</h1>\n      <PowerButton />\n      <Display />\n      <Volume />\n      <Reverb />\n      <BankSelector />\n      <Pads />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}